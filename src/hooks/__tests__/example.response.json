{
  "version": "https://jsonfeed.org/version/1",
  "title": "Stories by Ayuth Mangmesap on Medium",
  "home_page_url": "https://medium.com/@ayuthmang?source=rss-37b3ab8c5bd------2",
  "description": "Stories by Ayuth Mangmesap on Medium",
  "author": {
    "name": "yourfriends@medium.com"
  },
  "items": [
    {
      "guid": "https://medium.com/p/6e9e3590d80c",
      "url": "https://medium.com/ayuth/ripcord-6-%E0%B8%84%E0%B8%B8%E0%B8%93%E0%B8%A5%E0%B8%B1%E0%B8%81%E0%B8%A9%E0%B8%93%E0%B8%B0%E0%B8%AA%E0%B8%B3%E0%B8%84%E0%B8%B1%E0%B8%8D%E0%B8%97%E0%B8%B5%E0%B9%88%E0%B9%81%E0%B8%A2%E0%B8%81-blockchain-%E0%B9%81%E0%B8%A5%E0%B8%B0-bullshit-%E0%B8%AD%E0%B8%AD%E0%B8%81%E0%B8%88%E0%B8%B2%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%99-6e9e3590d80c?source=rss-37b3ab8c5bd------2",
      "title": "RIPCORD: 6 คุณลักษณะสำคัญที่แยก Blockchain และ Bullshit ออกจากกัน",
      "content_html": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*TDnKxU_FEf4Pbfi7\" /><figcaption>Photo by Hitesh Choudhary</figcaption></figure><p>เมื่อไม่นานนี้เองผมเห็นวีดีโอหนึ่งที่น่าสนใจมากของคุณ Andreas ที่เป็นคนแรก ๆ ที่ Educate และ Advocate ไม่ว่าจะเป็นการเขียนหนังสือหลายทั้ง Mastering Bitcoin, Mastering Ethereum, Internet of Money Vol 1, 2, 3 หรืออีกหนังสือที่เพิ่งจะคลอด Mastering the Lightning Network และวีดีโอที่เป็น Open Education ใน <a href=\"https://www.youtube.com/channel/UCJWCJCWOxBYSi5DhCieLOLQ\">aantonop</a> บน <a href=\"https://www.youtube.com/channel/UCJWCJCWOxBYSi5DhCieLOLQ\">YouTube</a></p><p>ในทุกวันนี้เชื่อว่าไม่เคยมีใครได้ยินคำว่า Blockchain เป็นแน่เพราะนอกจากในในกี่ปีที่ผ่านมาเป็นกระแสทั้งด้านดีและไม่ดีทั้งที่เกี่ยวกับ Blockchain เองหรือถูกอ้างอิงก็ตามแต่ ในบล็อกนี้จะหยิบนำเอาคุณลักษณะของ Blockchain ที่เมื่อนำคุณลักษณะเหล่านี้มาถาม blockchain ว่ามีองค์ประกอบที่สำคัญอะไรบ้างที่ช่วยทำให้เราแยกแยะได้ระหว่าง Blockchain กับ Bullshit (Andreas ใช้คำนี้เลยตรงดี)</p><p>สมัยหนึ่งที่ Blockchain เป็นที่ Hype กันมากถึงกับมีมุกตลกใน Talk ที่พูดว่า ถ้าคุณไป Silicon Valley เดินเข้าไปในประตูห้องน้ำในโรงแรมของคุณ ปิดไฟและตะโกนหน้ากระจกห้องน้ำว่า Blockchain Blockchain Blockchain สามครั้ง จะมี VC โผล่มาจากอ่างน้ำและเริ่มโยนเงินมาให้เรา</p><p>ในบริบทที่กล่าวถึงและที่แปลมาอาจไม่ใช่บริบทของไทยสะทีเดียว เช่น ระบบการธนาคาร ระบบทางการเงิน หากแต่เป็นบริบทของประเทศต่างที่ระบบการธนาคาร การเงินค่อนข้างจะแย่มาก ถูกผู้มีอำนาจลิดลอนสิทธิเสรีภาพและการเข้าถึง เช่น การฟอกเงิน การดึงเงินเกษียณจากบัญชีของคนที่ฝากไว้ออกไป การพิมพ์เงินออกมาจนเงินสกุลนั้นแทบจะไม่มีค่า หรือคนที่ในประเทศที่ทางธนาคารมองว่าไม่สมควรจะได้รับ ดังนั้นลองคิดถึงบริบทเหล่านี้ตอนอ่านก็จะช่วยให้เข้าใจมากขึ้นครับ</p><h3>RIPCORD blockchains คืออะไร?</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UWX2kvlLPniJcQvY1-HTeA.png\" /><figcaption>The acronym of RIPCORD</figcaption></figure><p>RIPCORD คือการนำเอาคุณลักษณะที่สำคัญของ blockchain ที่จะมาปฏิวัติโลกของเราเช่นเดียวกับอินเทอร์เน็ตและรถยนต์ที่มาปฏิวัติวงการการสื่อสารและการเดินทา หากท่านนำคุณลักษณะทั้งหลายเหล่านี้จะทำให้เราสามาถแยก blockchain ที่มีคุณค่ากับ blockchain ที่ bullshit ได้ทันที</p><p>ในหลายครั้งที่​ Andreas เคยพูดไว้ไม่ว่าจะใน Conference, Talk, LiveStream หรือ Q&amp;A เราจะได้ยินหนึ่งในคุณลักษณะเหล่านี้ Open, Natural, Borderless, Public, Censorship Resistance, Decentralized อาจจะเรียงกันหรือไม่เรียงก็แล้วแต่บริบทบที่กำลังพูดถึงอยู่ ผมคิดว่าการนำเอาคุณสมบัติเหล่านี้ร้อยเรียงกันมาเป็นคำที่จำง่ายคือจุดประสงค์ของคำนี้ครับ เอาละไปดูแต่ละคุณลักษณะกันดีกว่า</p><h3>R — Revolutionary</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*dJ-r1kpeAdDZcVcpTgIhng.png\" /><figcaption>The R of RIPCORD: it represents “Revolutionary”</figcaption></figure><p>Cryptocurrency จะเป็นสิ่งที่เข้ามาปฏิวัติโลกของเรา เช่นเดียวกับอินเทอร์เน็ตและรถยนต์ เพราะคริปโทเคอร์เรนซีนั้นได้เข้าเปลี่ยนแปลงโครงสร้างพื้นฐานทางการเงินที่จะทำให้ดีและเต็มไปด้วยความหวังมากยิ่งขึ้น</p><h3>I — Immutable</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ToAihGrnqVklNlhyqy302A.png\" /><figcaption>The I of RIPCORD: it represents “Immutable”</figcaption></figure><p>ข้อมูลใด ๆ ที่ถูกบันทึกลง RIPCORD blockchains จะไม่สามารถถูกเปลี่ยนแปลงและแก้ไขได้ ดังคำการเปรียบเปรยว่า ถ้าในยุคก่อนบรรพบุรุษของเราสลักสิ่งต่าง ๆ ไว้ในหิน ทว่าในอนาคตเราจะสลักสิ่งต่าง ๆ ไว้ใน Blockchains</p><h3>P — Public</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Pq7ufGwZKLzByPaO8MU0Bg.png\" /><figcaption>The P of RIPCORD: it represents “Public”</figcaption></figure><p>ระบบเครือข่ายของ RIPCORD Blockchains นั้นเปิดกว้างแก่ทุกคน ไม่มีการปกครองเป็นลำดับชั้น ทุกคนเท่าเทียมกัน ไม่มีคนคอยเฝ้าประตู(gate keepers) ไม่มีการถูกควบคุมว่าธุรกรรมไหนที่สามารถเกิดขึ้นได้หรือไม่ได้ ทุกธุรกรรมสามารถเกิดขึ้นและเข้าสู่ระบบอย่างเท่าเทียมกัน ในแต่ละธุรกรรมที่เกิดขึ้นและถูกบันทึกลงใน Blockchain สามารถตรวจสอบและยืนยันได้ทุกธุรกรรม</p><h3>C — Collaborative</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*QdJOImvf6iXwGJ5WUKP1ng.png\" /><figcaption>The C of RIPCORD: it represents “Collaborative”</figcaption></figure><p>ในช่วงเวลาที่ผ่านมาทางเลือกของการทำธุรกรรมนั้นสามารถทำได้แค่การใช้งานระบบธนาคารที่ไม่โปร่งใส ไม่สามารถถูกตรวจสอบได้ แต่ปัจจุบันนั้นทุกคนสามารถเข้าถึง blockchains ได้อย่างเสรีในฐานะชุมชน(community)ได้แล้ว</p><p>อาสาสมัครผู้เข้าร่วมในระบบเครือข่ายนั้นจะทำงานร่วมกันเพื่อสร้างระบบเครือข่ายที่สามารถทำงานร่วมกันได้และบังคับใช้ฉันทามติหรือข้อกำหนดที่ตกลงร่วมกันในเครือข่าย</p><h3>O — Open</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*rA-SCJCJnEpm2sjFnH2gdA.png\" /><figcaption>The O of RIPCORD: it represents “Open”</figcaption></figure><p>สำหรับการเข้ามาร่วมเป็นส่วนของหนึ่งเครือข่าย RIPCORD blockchain นั้นสามารถทำได้ทันที ผู้เข้าร่วมไม่จำเป็นต้องขออนุญาตจากใคร ไม่มีการถูกปิดกันแม้จะอยู่ประเทศอะไรก็ตามขอเพียงแค่มีอินเทอร์เน็ตและสมาร์ทโฟนที่สามารถเชื่อมต่ออินเทอร์เน็ตได้จากนั้นดาวน์โหลดซอฟท์แวร์มาติดตั้งก็เข้ามาเป็นส่วนหนึ่งของเครือข่ายได้ทันที</p><h3>R — Resistant (to Censorship)</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*LutzlJkMeEwN9Tg1Nqdwrg.png\" /><figcaption>The R of RIPCORD: it represents “Resistant”</figcaption></figure><p>ธรรมชาติของ Cryptocurrency นั้นถูกสร้างขึ้นมาเพื่อต่อต้าน การถูกควบคุม การแทรงแทรงทุกประเภท ไม่ว่าจะเป็นองค์กร รัฐบาล ใด ๆ ก็ไม่สามารถหยุดยั้งควบคุมธุรกรรมที่เกิดขึ้นได้ รวมถึงกีดกันไม่ให้ใครเข้ามาเป็นส่วนหนึ่งของระบบเครือข่าย</p><p>สิ่งเหล่านี้เองทำให้เกิดความเป็นธรรมขึ้นในระบบเครือข่ายเพราะไม่มีใครเป็นผู้ตัดสินว่าธุรกรรมใดที่ดี ธุรกรรมใดที่เลว ธุรกรรมนี้ทำได้หรือไม่ ขอเพียงแค่ผู้ใช้งานเป็นเจ้าของบัญชีและจ่ายค่าธรรมเนียม(gas) เพียงเท่านี้ก็สามารถทำธุรกรรมได้ทันที</p><p>ด้วยสิ่งเหล่านี้เองทำให้ Crypto ที่ถูกสร้างขึ้นบน RIPCORD blockchains นั้นไม่สามารถถูกแทรกแทรงและหยุดยั้งไม่ว่าจะเป็นใครรัฐบาลและองค์กรใดนั่นทำให้มันเป็นของประชาชนอย่างแท้จริง</p><h3>Decentralized</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Ru7HzV4yP5S826lOhk6Q1g.png\" /><figcaption>The D of RIPCORD: it represents “Decentralized”</figcaption></figure><p>ความกระจายศูนย์และไม่มีศูนย์กลางอำนาจของระบบเครือข่ายนั้นเป็นจุดแข็งแกร่งของ Crypto จึงส่งผลให้ระบบเครือข่ายไม่ถูกควบคุมและแทรกแทรงโดยผู้มีอำนาจจากสถาบันหรือองค์กรใดก็ตาม ระบบเครือข่ายจึงถูกควบคุมโดยแค่ข้อกำหนดหรือฉันทามติที่ตกลงร่วมกัน(Decentralized Protocol)เท่านั้น</p><p>RIPCORD blockchains นั้นเป็นแพลทฟอร์มที่เป็นกลางเพราะในระบบเครือข่ายนั้นเองจะไม่ปิดกั้น แบ่งแยกว่าธุรกรมไหนควรทำก่อนหลัง ธุรกรรมไหนดีหรือเลว มีเพียงแค่ฉันทามติที่กำหนดและตกลงร่วมกันเท่านั้น</p><p>การกระจายศูนย์ของอำนาจนั้นเป็นหลักการสำคัญที่ทำให้คุณลักษณะอื่น ๆ ของ RIPCORD นั้นเป็นไปได้</p><p>ความจริงการแปลข้อมาเป็นภาษาไทยนี่ยากมากครับ ตอนแรกคิดว่าคลิปแค่ 2 นาทีเดี๋ยวก็เขียนออกมาได้ใช้เวลานิดเดียวแต่ไม่นิดเดียวเพราะศัพท์เฉพาะบางคำที่แปลมาเป็นไทยแปลมาก็แปลกประหลาดตะหงิดใจอยู่พอสมควร ผมแนะนำให้ไปดูหลาย Talk ของ Andreas อาจเข้าใจได้ดียิ่งขึ้น</p><p>ใครไม่รู้จัก Andreas M Antonopoulos หรืออยากเริ่มต้นศึกษาเกี่ยวกับ Bitcoin, Open Blockchain แนะนำให้ลองดูวีดีโอในช่อง <a href=\"https://www.youtube.com/channel/UCJWCJCWOxBYSi5DhCieLOLQ\">aantonop</a> หรือถ้าอยากดูแยกเป็นหมวดหมู่ลองดูในเว็บไซต์ <a href=\"https://aantonop.com/educational-videos/\">https://aantonop.com/educational-videos/</a> ได้ครับ (เพิ่งเห็นเหมือนกันว่ามี แต่ส่วนใหญ่ถ้าไปติดตามใน YouTube จะมี Playlist แยกประเภทให้อยู่แล้ว)</p><p>สุดท้ายขอปิดด้วยข้อความที่ทรงพลังของ Andreas ตอนหนึ่งว่า</p><blockquote>Bitcoin is the Internet of money and currency is only the first application.</blockquote><h3>References</h3><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FNG4u55e3SYo%3Ffeature%3Doembed&amp;display_name=YouTube&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DNG4u55e3SYo&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FNG4u55e3SYo%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"854\" height=\"480\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/78299cee9b9505ab36dcfc04e5498cb5/href\">https://medium.com/media/78299cee9b9505ab36dcfc04e5498cb5/href</a></iframe><ul><li><a href=\"https://www.youtube.com/watch?v=NG4u55e3SYo\">https://www.youtube.com/watch?v=NG4u55e3SYo</a></li><li><a href=\"https://youtu.be/uZPIz3ArQww\">https://youtu.be/uZPIz3ArQww</a></li><li><a href=\"https://www.cryptoliberate.com/glossary/ripcord/\">https://www.cryptoliberate.com/glossary/ripcord/</a></li></ul><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=6e9e3590d80c\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/ayuth/ripcord-6-%E0%B8%84%E0%B8%B8%E0%B8%93%E0%B8%A5%E0%B8%B1%E0%B8%81%E0%B8%A9%E0%B8%93%E0%B8%B0%E0%B8%AA%E0%B8%B3%E0%B8%84%E0%B8%B1%E0%B8%8D%E0%B8%97%E0%B8%B5%E0%B9%88%E0%B9%81%E0%B8%A2%E0%B8%81-blockchain-%E0%B9%81%E0%B8%A5%E0%B8%B0-bullshit-%E0%B8%AD%E0%B8%AD%E0%B8%81%E0%B8%88%E0%B8%B2%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%99-6e9e3590d80c\">RIPCORD: 6 คุณลักษณะสำคัญที่แยก Blockchain และ Bullshit ออกจากกัน</a> was originally published in <a href=\"https://medium.com/ayuth\">Ayuth’s Story</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2023-03-25T18:05:34.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    },
    {
      "guid": "https://medium.com/p/73f1811bb673",
      "url": "https://medium.com/scb-techx/%E0%B8%A1%E0%B8%B2%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B8%88%E0%B8%B1%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A-import-assertions-73f1811bb673?source=rss-37b3ab8c5bd------2",
      "title": "มารู้จักกับ Import Assertions",
      "content_html": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*BJyytcNdpCvhYap-kEWleQ.png\" /></figure><p>เผอิญอ่านโค้ดโปรเจคหนึ่งแล้วเจอ import รูปแบบนี้เลยสงสัยว่ามันคืออะไร node สามารถ import แบบนี้ได้ด้วยเหรอ?</p><pre>import data from &#39;./foo.json&#39; assert { type: &#39;json&#39; };</pre><p>ว่าแล้วก็ลองไปค้นหาดูว่าเดี๋ยวนี้มีการ import แบบนี้ด้วยและพบว่าเป็นฟีเจอร์หนึ่งของภาษาที่ชื่อว่า <a href=\"https://v8.dev/features/import-assertions\">Import Assertions</a></p><h3>Import Assertions</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*T5uaa89qqym7ZxjX\" /><figcaption>Photo by Alice Gu</figcaption></figure><p>เป็นความสามารถหนึ่งของภาษา JavaScript ที่ถูกเพิ่มเข้ามาทำให้เราสามารถเช็ค module ที่ถูก import เข้ามาในโค้ดและเช็คว่าสิ่งที่ import เข้ามานั้นเป็น JSON จริงหรือเปล่า ถ้าไม่ใช่ประเภทนั้นจริงก็จะเกิด error ขึ้นทันที เพื่อให้เห็นภาพมากขึ้นเรามาดูปัญหาของการ import กับเรื่องของ security กันก่อน</p><h3>ปัญหาของการ import โดยที่ไม่มี Assertions</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*7aLSPhK_Y3izSs3V\" /><figcaption>Photo by <a href=\"https://unsplash.com/@usmanyousaf\">Usman Yousaf</a></figcaption></figure><p>ปกติแล้วไฟล์บนเครื่องของเราจะต้องมีนามสกุลของไฟล์(file extension) เพื่อบ่งบอกว่าไฟล์นั้นเป็นไฟล์ประเภทใด แต่นามสกุลของไฟล์นั้นไม่ได้เป็นสิ่งที่บ่งชี้ว่าไฟล์นั้นคือไฟล์ประเภทนั้นจริง ๆ เราไฟล์นั้นอาจมีการเปลี่ยน .css แต่ด้านในมีโค้ดที่สามารถทำอันตรายกับเครื่องเราและเรา<strong>เผลอไปคลิก</strong>ให้มันทำงาน กลายเป็นว่าเครื่องเราติดไวรัสไปสะอย่างนั้น</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/256/1*4BUSeWzjd1n-BvgC-iIbWg.png\" /></figure><p>ถ้าในมุม Browser ถ้าเรา(client)เข้าเว็บหนึ่งและทำการร้องขอไฟล์ใด ๆ ของหน้าเว็บไม่ว่าจะเป็น HTML, CSS, JavaScript และ Web Server จะส่งไฟล์นั้นกลับมาให้พร้อมแนบ Header จิ๋วที่ชื่อ Content-Type: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\">&lt;MIME type&gt;</a> เพื่อบ่งบอกกับคนที่ขอไฟล์นี้ไปว่าไฟล์นี้คือไฟล์ประเภทอะไรจากนั้นฝั่ง client นั้นเองก็จะนำเอาไฟล์นี้ไปประมวลผลต่อไป ถ้าเป็นภาพก็จะแสดงผลเป็นภาพ ถ้าเป็นสไตล์ก็จะนำไปปรับใช้บนหน้าเว็บ หรือถ้าเป็นสคริปต์ก็จะนำไปรันต่อ</p><p>แต่เรื่องจะเกิดก็ต่อเมื่อถ้า third-party server โดนแฮคขึ้นมาและส่งไฟล์ที่อันตรายให้เรากลับมา เช่น เราขอไฟล์รูปภาพแต่ Server ตอบกลับมาว่านี่คือไฟล์ JavaScript นะและเจ้าจงเอาไปรันบนเครื่องต่อ ซึ่งสคริปต์นั้นอาจเป็นสคริปต์ที่เก็บข้อมูลของเรา ทำอันตรายต่อเครื่องของเราอะไรก็ว่าไป หรือถ้าเป็นช่องโหว่ที่หนักมากอาจะถึงขั้นถูกยึดเครื่องก็เป็นไปได้</p><h3>การใข้งาน Import Assertions</h3><p>สำหรับนักพัฒนาตัว syntax นี้เรียกว่าแทบไม่ต้องเปลี่ยนแปลงอะไรมากมายเลยครับ แค่เพิ่มคำว่า assert { type: &#39;json&#39; } ต่อท้าย statement ที่ทำการ import module เข้ามา</p><h4>Default Module Import</h4><pre>// foo.json<br>{ &quot;answer&quot;: 42 }</pre><pre>// main.mjs<br>import json from &#39;./foo.json&#39; assert { type: &#39;json&#39; };<br>console.log(json.answer); // 42</pre><h4>Dynamic Import</h4><p>การ import แบบ dynamic ก็สามารถทำได้เช่นกัน และเช่นเดิมแค่ใส่ parameter เพิ่มเติมเป็น Object ว่า import(... , assert: { type: &#39;json&#39; }})</p><pre>// main.mjs<br>const jsonModule = await import(&#39;./foo.json&#39;, {<br>  assert: { type: &#39;json&#39; }<br>});<br>console.log(jsonModule.default.answer); // 42</pre><h3>Browser Support</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/828/1*U5vkN37h22ZqxDkoAWL0eg.png\" /><figcaption>Import assertions support, grabs from <a href=\"https://v8.dev/features/import-assertions\">https://v8.dev/features/import-assertions</a></figcaption></figure><p>ฟีเจอร์นี้สามารถใช้งานได้ใน Chrome v91 และ node v18 เป็นต้นไป(ขณะที่เขียน 9/3/2023)</p><p>อย่างไรก็ตามแม้ฟีเจอร์นี้จะช่วยเราหลายอย่างแต่การเปิดใช้มีข้อควรระวังเช่นกัน ถ้าลองรันสคริปต์ด้านบนด้วย node เวอร์ชัน 18 ขึ้นไปจะเจอ warning output ตามด้านล่าง(ทดสอบด้วย node v16.15.1)</p><pre>(node:38122) ExperimentalWarning: Importing JSON modules is an experimental feature. This feature could change at any time<br>(Use `node --trace-warnings ...` to show where the warning was created)</pre><p>หากใครต้องการใช้ฟีเจอร์นี้กับโค้ดที่ใช้ใน node version ต่ำกว่า 18 สามารถทำได้เช่นกันโดยใส่ flag ว่า --experimental-json-modules เช่น</p><pre>node --experimental-json-modules &lt;file&gt;</pre><p>ใครใช้ babel อยู่แล้วและต้องการติดติดตั้ง plugin เพื่อทำการใช้งานก็สามารถทำได้โดยการลง <a href=\"https://www.npmjs.com/package/@babel/plugin-syntax-import-assertions\">@babel/plugin-syntax-import-assertions</a> และปรับ config ไฟล์นิดหน่อยก็สามารถใช้งานได้ทันที</p><h3>สรุป</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*ir7zifKlqFijlxW1\" /><figcaption>Photo by Alan Hardman</figcaption></figure><p>Import Assertions นั้นเข้ามาเพิ่มความปลอดภัยให้กับผู้ใช้งานโดยการเช็คว่าจริง ๆ แล้วไฟล์ที่เรา import มานั้นใช่ไฟล์ประเภทนั้นจริงหรือไม่? ถ้าไม่ใช่ก็หยุดทำงานและพ่น error ออกมาเพื่อความปลอดภัยของผู้ใช้งานรวมถึงนักพัฒนา</p><p>หากมองไปอนาคตผมคิดว่าการเช็คไฟล์ type นั้นอาจไม่ได้จำกัดที่ JSON เพียงอย่างเดียว อาจเป็นได้หลายชนิดมากยิ่งขึ้น และอาจ custom ไปถึงขั้นตอนการตรวจสอบก็เป็นได้ ติดตามกันต่อไปครับ</p><p>ในมุมนักพัฒนาเราต้องคำนึงถึงผู้ใช้งานของเรา เช่น Browser ในเครื่องของผู้ใช้งานไม่ได้ใหม่มากและไม่ได้อัพเดทจึงทำให้ไม่สามารถใช้งานฟีเจอร์ของภาษาเหล่านี้ได้ หน้าที่ของนักพัฒนาคือทดสอบให้มั่นใจว่าผู้ใช้งานสามารถใช้งานแอพพลิเคชันได้แม้ Browser เก่าจนไม่ได้อัพเดทเป็นเวลานานใช้งานได้เพราะถ้าใช้ไม่ได้ฟีเจอร์เหล่านี้คงเป็นภาระมากกว่าเป็นประโยชน์ต่อผู้ใช้งานและตัวเรา</p><p>ใครสนใจศึกษาเพิ่มเติมสามารถอ่านตัว proposal นี้ได้ที่ GitHub ด้านล่าง👇</p><p><a href=\"https://github.com/tc39/proposal-import-assertions\">GitHub - tc39/proposal-import-assertions: Proposal for syntax to import ES modules with assertions</a></p><h3>แหล่อ้างอิง</h3><ul><li><a href=\"https://v8.dev/features/import-assertions\">https://v8.dev/features/import-assertions</a></li><li><a href=\"https://github.com/tc39/proposal-import-assertions\">https://github.com/tc39/proposal-import-assertions</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types</a></li><li><a href=\"https://github.com/tc39/proposal-import-assertions\">https://github.com/tc39/proposal-import-assertions</a></li></ul><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=73f1811bb673\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/scb-techx/%E0%B8%A1%E0%B8%B2%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B8%88%E0%B8%B1%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A-import-assertions-73f1811bb673\">มารู้จักกับ Import Assertions</a> was originally published in <a href=\"https://medium.com/scb-techx\">SCB TechX</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2023-03-15T11:41:42.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    },
    {
      "guid": "https://medium.com/p/8b6255ee70f2",
      "url": "https://medium.com/scb-techx/react-design-patterns-presentational-%E0%B9%81%E0%B8%A5%E0%B8%B0-container-components-8b6255ee70f2?source=rss-37b3ab8c5bd------2",
      "title": "React Design Patterns: Presentational และ Container Components",
      "content_html": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*LSYkdzPpW0FUmmV6\" /><figcaption>Photo by Mateusz Wacławek</figcaption></figure><p>ถ้าจะกล่าวถึง Design Patterns ใน React คงจะหนีไม่พ้น Pattern ที่ชื่อว่า Presentational และ Container Components อยู่ในรายการเป็นอันดับแรก ๆ เป็นแน่</p><p>ย้อนกลับไปเมื่อปี Mar, 2015 ในปีที่ Dan Abramov ได้ Publish บทความที่ยังอมตะหัวข้อหนึ่งที่ชื่อว่า <a href=\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0?source=user_profile---------11----------------------------\">Presentational and Container Components</a> ซึ่งไม่นานนักหลัง ReactJS ได้คลอดออกมาเมื่อ <strong>May 29, 2013</strong></p><p>ในบทความนั้น Dan กล่าวถึงหลักคิดในการแบ่ง Component ของเราเป็น 2 ส่วนคือ Presentational และ Container Components ไว้อย่างน่าสนใจทีเดียวครับ เอาละมาทำความรู้จักกันดีกว่าว่าแต่ละอย่างคืออะไรและมีหน้าที่อะไร</p><p><a href=\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\">Presentational and Container Components</a></p><h3>Presentational Components</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*d_3wcExDzkfbI9xJ\" /><figcaption>Photo by James A. Molnar</figcaption></figure><p>Presentational Component คือ Component ที่รับผิดชอบเกี่ยวกับการแสดงผล โดยภาย Component จะมีโค้ดที่เก็บ Markup ของ DOM ไว้ภายในและไม่มีส่วนของ Logic ที่ไม่เกี่ยวข้องกับการแสดงผล เช่น การดึงข้อมูลจากแหล่งไหน การเปลี่ยนแปลงแก้ไขข้อมูล เป็นต้น</p><p>คุณลักษณะของ Presentation Component จะมีดังนี้</p><ul><li>สนใจแค่สิ่งนั้น<strong>มีรูปร่างหน้าตาเป็นอย่างไร</strong></li><li>มี DOM markup และ style ที่ใช้ในการแสดงผลไว้กับตัวเอง</li><li>ไม่มี dependencies ไปตลอดทั้งแอพ (Have no dependencies on the rest of the app, such as Flux actions or stores.)</li><li>ไม่มีการระบุว่าในตัว Component เองว่า data ควรจะถูกโหลดหรือถูกแก้ไขอย่างไร</li><li>มักจะไม่ค่อยมี state หรือมีข้อมูลเป็นของตนเอง ถึงแม้จะมีก็จะเก็บแค่ state ของ UI</li></ul><p>*คุณลักษณะของ Presentational ในเวอร์ชันที่ยังไม่มี hooks</p><ul><li>จะเขียนโดยใช้แค่ functional components เท่านั้นเว้นเสียแต่ต้องการใช้งาน state หรือ life cycle hooks ต่าง ๆ</li><li>รับ data และ callbacks ผ่านทาง props เท่านั้น</li></ul><p>ชื่อที่คล้ายคลึงกัน: Dumb Component, Stateless Component</p><h3>Container Components</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*AYW1D7mtJjAJ-Geo\" /><figcaption>Photo by Artur Tumasjan</figcaption></figure><p>Container Component คือ Component มีการระบุว่าควรจะดึงข้อมูลมาจากที่ไหน การเปลี่ยนแปลงแก้ไขข้อมูลควรจะเป็นอย่างไร เมื่อกดปุ่มนี้แล้วจะต้องส่งข้อมูลหรือเก็บข้อมูลไว้ที่ไหน เป็นต้น</p><p>คุณลักษณะของ Container Component</p><ul><li>สนใจว่าสิ่งที่อยู่ในแอพ<strong>ควรจะทำงานอย่างไร</strong> เช่น ข้อมูลนี้ควรจะไปดึงมาจากที่ไหน ข้อมูลควรจะแก้ไขข้อมูลอย่างไร คลิกปุ่มนี้แล้วให้ไปหน้าไหนหรือทำอะไรต่อ เป็นต้น</li><li>จะมี state เก็บไว้ด้านในเนื่องจากตัว Component เองจะต้องเป็นที่เก็บรวบรวมข้อมูล ส่งต่อหรือคืนค่าต่าง ๆ กลับไปไปให้แก่ Component อื่น</li><li>มีหน้าที่เตรียม data และ behevior ทั้งหลายให้กับ Presentational Components หรือ Container Component อื่น (ในเวอร์ชันที่เราสามารถเขียน hooks ได้ เราสามารถมองว่าตัว hooks function ที่มี state อยู่ด้านในเป็น container ก็ย่อมได้)</li></ul><p>ขื่อที่คล้ายคลึงกัน Smart Component, Stateful Component</p><h3>ตัวอย่างโค้ด</h3><p>ลองมาดูแอพพลิเคชันง่ายตัวหนึ่งที่ชื่อว่า Counter App แอพนี้สามารถเพิ่มเลข ลดเลข และรีเซ็ทค่า count ได้</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/125/1*Mlm01LRAYxiLk65itutr2w.gif\" /><figcaption>The simply Counter app can increase, decrease and reset the number</figcaption></figure><pre>import { useState } from &quot;react&quot;;<br><br>const CounterApp = () =&gt; {<br>  const [counter, setCounter] = useState(0);<br>  const handleIncrement = () =&gt; setCounter(counter + 1);<br>  const handleDecrement = () =&gt; setCounter(counter - 1);<br>  const handleReset = () =&gt; setCounter(0);<br><br>  return (<br>    &lt;&gt;<br>      &lt;DisplayCounter counter={counter} /&gt;<br>      &lt;CounterController<br>        onIncrementClick={handleIncrement}<br>        onDecrementClick={handleDecrement}<br>        onResetClick={handleReset}<br>      /&gt;<br>    &lt;/&gt;<br>  );<br>};<br><br>const DisplayCounter = ({ counter }) =&gt; {<br>  return &lt;p&gt;Counter is: {counter}&lt;/p&gt;;<br>};<br><br>const CounterController = ({<br>  onIncrementClick,<br>  onDecrementClick,<br>  onResetClick<br>}) =&gt; {<br>  return (<br>    &lt;div&gt;<br>      &lt;button onClick={onIncrementClick}&gt;-1&lt;/button&gt;<br>      &lt;button onClick={onDecrementClick}&gt;-1&lt;/button&gt;<br>      &lt;button onClick={onResetClick}&gt;Reset&lt;/button&gt;<br>    &lt;/div&gt;<br>  );<br>};<br><br>export default CounterApp;</pre><p>อธิบายโค้ดด้านบน มีแอพที่ชื่อ CounterApp ทำหน้าที่</p><ol><li>DisplayCounter ทำหน้ารับ counter ที่ได้มาจาก props และแสดงผลบนหน้าจอ</li><li>CounterController ทำหน้าที่รับ callbacks จำนวน 3 ฟังก์ชันได้แก่ onIncrementClick , onDecrementClick , onResetClick และผูกตัว button แต่ละปุ่มไม่ว่าจะเป็น +1 , -1 , reset ให้เรียก callback ที่ได้รับ</li><li>CounterApp ทำหน้าที่เป็นเสมือนแอพของเราที่หุ้ม Component ทั้งหมดไว้ รวมถึงเก็บ state และ function ที่ทำการเปลี่ยนแปลงค่า state เอาไว้</li></ol><p>ถ้าอ่านจากคำอธิบาย Component ด้านบนคงจะพอมองออกว่าอะไรคือ Presentational หรือ Container Component ถ้าใครยังมองไม่ออกไม่เป็นไรครับ เรามาลองมองไปด้วยกัน</p><ol><li>ดูจากฟังก์ชันที่เห็นผ่านจะเห็นโค้ดส่วนที่ React</li><li>DisplayCounter ทำหน้าที่เป็น Presentational Component โดยรับเอาค่า counter มาจาก props และแสดงผลบนหน้าจอ โดยตัวเองมีโค้ดที่เก็บ DOM markup ไว้ภายในตัวเอง</li><li>CounterController ทำหน้าที่เป็น Presentational Component โดยรับเอา callbacks มาจาก props และทำการผูกปุ่มแต่ละปุ่มเข้ากับ callback แต่ละอัน โดยตัวมันเองไม่ได้มีโค้ดที่เกี่ยวกับการเปลี่ยนแปลงค่า counter หากแต่แค่บอกว่าถ้าเกิดคลิกปุ่มนี้จะต้องเรียก callback ไหน</li><li>CounterApp ทำหน้าที่เป็น Container Component ที่เก็บ Logic ของแอพเราเอาไว้ ทั้งเก็บตัว state เองและสร้าง callback functions ที่ทำหน้าที่เปลี่ยนแปลง state ของ counter ไว้</li></ol><h3><strong>ประโยชน์ที่รับได้จากการทำตาม Pattern นี้</strong></h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*XYP65S60Ao4Me-xj\" /><figcaption>Photo by Razvan Chisu</figcaption></figure><ul><li><strong>Reusability</strong>: การนำ Component กลับมาใช้ใหม่สามารถทำได้ง่ายขึ้นถ้าเราสร้าง Component ด้วย Pattern นี้</li><li><strong>Testability</strong>: การทดสอบ Component ทำได้สะดวกขึ้นเพราะสามารถเขียนเทสแยกชิ้นส่วน เช่น การเทส Presentational Component เราสามารถจำลอง state แต่ละแบบและส่งไปให้ Component ทดสอบได้ทันที เช่น Snapshot Testing ก็</li><li><strong>Maintainability</strong>: การบำรุงรักษาโค้ดใน Component เองก็ทำได้ง่ายขึ้นเพราะเรามี mindset ในการมองและแนวทางปฎิบัติที่เป็นไปแนวทางเดียวกันทำให้คนที่เข้ามาแก้ไขหรือเพิ่มฟีเจอร์ใหม่ ๆ สะดวกมาก(ที่ไม่เจ็บปวดรวดร้าวชอกช้ำทุกข์ทรมานชอกช้ำปางตายเพราะเขียน Component ที่โค้ดโครตจะยาวจะแก้อะไรหรือเพิ่มอะไรก็ย๊ากยาก …)</li></ul><h3>แต่ Pattern มันหมดยุคไปแล้วไม่ใช่หรือ</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*B9XHSWZ8vRv3kjzu\" /><figcaption>Decorated photo by <a href=\"https://unsplash.com/@rise13law\">Walter Martin</a></figcaption></figure><p>จริงอยู่ที่ Dan เขียนใน<a href=\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\">บล็อก</a>ของตัวเองว่าไม่แนะนำ Pattern นี้แล้วหลังจากที่มี React Hooks เข้ามา แต่ผมมองว่ารูปแบบนี้ไม่ได้ล้าหลังไปสะทีเดียวหากแต่มีความจำเป็นอย่างยิ่งเพราะการมอง Component นี้ช่วยให้เรามีเลนส์ในการมอง Component และแบ่งแยกตามบทบาทหน้าที่ของตัวเองได้อย่างถูกต้องเหมาะสม</p><p>หากท่านต้องไป migrate โค้ดโปรเจคเก่า ๆ หรือตามอ่าน Tutorial ตามอินเทอร์เน็ตที่เขียนไว้ตั้งแต่ยุคก่อนยังไม่ได้อัพเดท ยังคงมีประโยชน์เป็นอย่างยิ่งครับ หรือต้องไป migrate โปรเจคที่ยังคงเป็นพระอิฐพระปูนอยู่ตั้งแต่ก่อนที่ยังไม่มี Hooks และต้อง refactor มาเป็นเวอร์ชันใหม่ดิบกิ๊บเก๋นั้น การมีมุมมองนี้ติดตัวคงจะดีกว่าไม่มีอะไรเลย</p><h3>สรุป</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*mNJf97uSX4nLnGiR\" /><figcaption>Photo by Stephen Kraakmo</figcaption></figure><p>ถ้าจะสรุปทั้งบทความเป็นเพียงคำเดียวคงหนีไม่พ้นคำว่า “<strong>การแยกเรื่อง</strong>” โดยเรื่องที่เราจะต้องแยกจะมีด้วยกัน 2 เรื่องคือ 1. การแสดงผล 2. การคิด</p><ol><li><strong>การแสดงผล</strong>: สนใจแค่รูปร่างของตัวเองนั้นมีอะไรแสดงอย่างไร และโค้ดส่วนใหญ่ที่อยู่ใน Component นั้นจะเกี่ยวข้องกับการแสดงผลเป็นหลัก</li><li><strong>การคิด</strong>: สนใจว่าสิ่งต่าง ๆ ควรจะทำงานอย่างไร ฉะนั้นโค้ดด้านในของตัว Component เองจะมี Logic ต่าง ๆ ที่เกี่ยวข้องกับ การดึงข้อมูล การแก้ไขข้อมูล การเก็บข้อมูล และ การอัพเดทข้อมูล</li></ol><p>หากมองว่า Pattern นี้เปรียบเสมือนการใส่เลนส์เพื่อเพิ่มมุมมองของเราให้ฉุกคิดสักนิดรู้ว่า Component ที่เราจะเขียนหรือปรับแก้นั้นกำลังทำ<strong>เรื่องอะไร</strong>อยู่นั้นการมีเลนส์นี้ติดตัวถือว่าเป็นสิ่งล้ำค่าเลยครับ</p><p>ติดตามต่อกันได้ในบทความหน้าครับ … สวัสดี</p><p><em>*หมายเหตุ: เนื้อหาในบทความที่เขียนนั้นจะเขียนตั้งแต่ React สมัยที่ต้องสร้างด้วยการเขียน </em><em>class Component extends React.Component { ... }เท่านั้นเพื่อใช้งาน state, life cycle hooks ไม่สามารถเรียกใช้งานเหมือนทุกวันนี้ได้ ทว่าตั้งแต่ </em><a href=\"https://reactjs.org/docs/hooks-intro.html\"><em>React Hooks</em></a><em> เข้ามาก็ทำให้การ reuse logic และการเขียนทำได้ยืดหยุ่นขึ้นไม่จำเป็นต้องสร้างด้วย class อีกต่อไป</em></p><h3>แหล่งอ้างอิง</h3><ul><li><a href=\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\">https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0</a></li><li><a href=\"https://reactjs.org/docs/hooks-intro.html\">https://reactjs.org/docs/hooks-intro.html</a></li></ul><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=8b6255ee70f2\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/scb-techx/react-design-patterns-presentational-%E0%B9%81%E0%B8%A5%E0%B8%B0-container-components-8b6255ee70f2\">React Design Patterns: Presentational และ Container Components</a> was originally published in <a href=\"https://medium.com/scb-techx\">SCB TechX</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2023-02-27T13:31:03.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    },
    {
      "guid": "https://medium.com/p/99bd0c7f6d71",
      "url": "https://medium.com/scb-techx/%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B8%88%E0%B8%B1%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A-design-patterns%E0%B9%83-%E0%B8%99-react-99bd0c7f6d71?source=rss-37b3ab8c5bd------2",
      "title": "รู้จักกับ Design Patternsใ​น React",
      "content_html": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*18WSXH1ugXdyrqXF\" /><figcaption>Photo by Daniel K Cheung</figcaption></figure><p>Design Patterns คือรูปในการแก้ปัญหาของการพัฒนาซอฟต์แวร์ที่นักพัฒนาจะเจอปัญหาเหล่านั้นเป็นประจำจนกระทั่งมีคนหรือกลุ่มคนที่รวมกลุ่มกันสร้างสิ่งที่เรียกว่า พิมพ์เขียวหรือ blueprint เพื่อนำรูปแบบของการแก้ปัญหานั้น ๆ มาใช้ในการแก้ปัญหาการพัฒนาซอฟต์แวร์ของเรา</p><h3>Design Patterns ใน React</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*9IRTVGxDlysQlzx4\" /><figcaption>Photo by Vlad Hilitanu</figcaption></figure><p>โดยปรกติ Design Pattern นั้นจะไม่ได้โฟกัสไปที่ภาษาใดภาษาหนึ่งเป็นหลัก หากแต่เป็นแค่พิมพ์เขียวที่เราสามารถนำไป implement ได้ไม่ว่าจะด้วยภาษาใดก็ตาม เช่นเดียวกับ ECMAScript Specification ที่เป็นสเปคที่ระบุไว้ในกระดาษจากนั้น JavaScript จึงค่อย ๆ เพิ่มความสามารถตามเข้าไปตามที่ระบุไว้</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*Sd4A0hjZs7q_ZWxE\" /></figure><p>Design Patterns ใน React นั้นจะมุ่งเน้นไปที่การแก้ปัญหาของการพัฒนาแอพพลิเคชันโดยใช้ชุดเครื่องมือที่อยู่ในตัว Library นั้นเอง หรือเครื่องมือที่ถูกสร้างขึ้นมาเพื่อแก้ปัญหา โดยในแต่ละ Framework/Library จะมีรูปแบบในการเขียน การแก้ปัญหาที่ต่างกัน</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*yBcDFmwT2Y5NWd0a\" /><figcaption>Photo by Tingey Injury Law Firm</figcaption></figure><p>ในมุมของนักพัฒนาเราจำเป็นที่จะต้องเข้าใจรูปแบบในการแก้ปัญหาเหล่านี้เพราะนอกจากจะทำให้ไม่ต้องเสียเวลาในการแก้ไขปัญหาเดิมที่มีอยู่แล้ว ยังทำให้เราสามารถสร้างแอพพลิเคชันที่ยืดหยุ่นรองรับการเพิ่ม-ลดฟีเจอร์ใหม่โดยที่ไม่เจ็บปวดถึงตาย ท่านใดเคยเขียน React มาก่อนโดยอยู่สมัยที่ยังไม่มี React Hooks นั้นท่านอาจจะคิดถึงรูปแบบดังนี้</p><ul><li>Presentational/Container Component Pattern</li><li>Component Composition Pattern</li><li>Higher Order Component</li></ul><p>หลังจากที่ React Hooks โลกทั้งใบก็กลายเป็นสีชมพูยูนิคอร์นที่ทำให้ชีวิตของนักพัฒนาดีขึ้นจึงได้เกิดรูปแบบที่นำเอาความสามารถของ Hooks ทำให้ชีวิตง่ายเยอะขึ้น ยกตัวอย่างรูปแบบที่อาจจะเคยได้เห็นกันมาบ้างคือ</p><ul><li>Context Module Function Pattern</li><li>Compound Components Pattern</li><li>Flexible Compound Components Pattern</li><li>Props Collections and Getters Pattern</li><li>State Reducer Pattern</li><li>Control Props Pattern</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*iuRRvrVJT8tKma6o\" /><figcaption>Photo by Jan Tinneberg</figcaption></figure><p>สำหรับบทความนี้แค่เกริ่นก่อนครับว่าในบทความถัดไปจะมี Pattern อะไรบ้างให้เห็นภาพรวมไว้ก่อน ถ้ามีโอกาสจะนำมาเขียนให้อ่านรูปแบบที่มีอยู่ในยุคก่อนหน้าจนถึงยุคปัจจุบันที่ Hooks ได้เข้ามาช่วยแก้ปัญหาและทำให้ชีวิตนักพัฒนาดีขึ้น สำหรับบล็อกนี้เอาไว้แค่นี้ก่อน … สวัสดี</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=99bd0c7f6d71\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/scb-techx/%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B8%88%E0%B8%B1%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A-design-patterns%E0%B9%83-%E0%B8%99-react-99bd0c7f6d71\">รู้จักกับ Design Patternsใ​น React</a> was originally published in <a href=\"https://medium.com/scb-techx\">SCB TechX</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2023-02-08T06:44:42.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    },
    {
      "guid": "https://medium.com/p/f5855a796c8a",
      "url": "https://medium.com/ayuth/how-do-i-get-trading-premium-plan-for-free-f5855a796c8a?source=rss-37b3ab8c5bd------2",
      "title": "How Did I Get Tradingview Premium Plan For Free",
      "content_html": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*95erN89aEi5p4axq\" /><figcaption>Photo by Art Rachen</figcaption></figure><blockquote>For education purpose, the method in this blog isn’t be able to produce again. Learn the thinking process then leap from it, not only result.</blockquote><p>Back in September last year, during the crypto boom cycle. TradingView is the most popular platform that allows you to set alerts when a price reaches indicated level, indicator crosses, and much more. Everyone is joyful (and FOMO especially, me).</p><p>During that period, I subscribed to the TradingView Pro plan too because I do not want to watch the screen all the time, just set some alert when the price reaches that level. I keep using the platform until my curiosity awakens:</p><ul><li>How did it know that I’m a pro a basic user?</li><li>How does it distinguish between a normal and paid user?</li><li>What will happen if I change that indicated variable to the paid one?</li><li>How could I make those curiosities above happen?</li></ul><p>Before going further, for those who don’t know what TradingView is.</p><h4>TradingView</h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8rpiwsRkf378BwEMhoNNBg.gif\" /></figure><blockquote>Where the world charts, chats and <strong>trades</strong> markets. We’re a supercharged super-charting platform and social network for <strong>traders</strong> and investors.</blockquote><p>TradingView is the platform that combines all stocks, forex, cryptocurrencies data, and price. Usually, in the bloom cycle, I monitor a lot using this platform that allows me to set an alert, triggering when some of the indicators cross and so on. Let’s get back to our story.</p><h3>🤔 How do I able to use the TradingView Premium plan for free?</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*oFbFlYDURDWPc_fp\" /><figcaption>Photo by Tingey Injury Law Firm</figcaption></figure><h4>🛠️ Tools you need</h4><p>You only need Chrome Dev Tools. In order to use these tools, you need to have some familiarity with web development and its debugging tool. Luckily enough, I’ve been teaching several Web Development and React Bootcamp.</p><h4>💩 Let’s get started</h4><p>Starting by observing its behavior. If you are not a paid member the dialog will be shown when you click some pro feature, for instance, multiple charts in one tab.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/271/1*xX_rTetW95rFlExZz1jwJQ.png\" /></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/614/1*h0gTQW9XkASvdN_rbVP3eQ.png\" /><figcaption>Selecting Layout dialog in TradingView when a user clicked a not eligible plan then the dialog will be shown that my plan doesn’t be able to use this feature</figcaption></figure><p>Let’s start by intercepting of clicking event. Open the Chrome Dev Tools and set a breakpoint when the mouse was clicked</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/346/1*PE3EW_k8io13NSga7KEZCw.png\" /><figcaption>Set a breakpoint on the mouse click listener, whenever the user clicked on something, it will be stopped when an event is fired</figcaption></figure><p>Then set the breakpoint at the mouse click event listener so that every time I clicked, it will bring me to the handler function for handling the click event.</p><p>Then I start playing with the “Step over”, “Step into”, and especially “Breakpoint” quite several hours to understand how its checking logic works. Repeating it until you found something interesting like this</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*mVvd-QutMCUytAFQbY3mPg.png\" /><figcaption>The Chrom Dev Tools windows that show unminified code and debugger its</figcaption></figure><p>By the time I found it, this took over and over again (and you need to be more patient). After being played it for a while and making little manipulation of some variables and making actions to produce the dialog again. Here are my rough steps of how it works:</p><ol><li>When a user clicks or requests any features</li><li>The app gets the user’s profile and grabs the current plan</li><li>Comparing the current user plan to {some sort of object that stores all of the plans and a set of eligible features for each plan, let me illustrate this, Pro plan should only open 2 charts in one layout not more than 4 as well as Pro+plan only allows 4, finally premium allowed to 8}</li><li>If a current plan is eligible to do that pass it on otherwise the dialog will be shown on request for a feature</li></ol><p>The interesting part is steps 2 and 3 either you can modify the logic and make it bypass its checking process.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*U-jeMGA4fd2LH5I9\" /><figcaption>Photo by Josh Mills</figcaption></figure><p>In my mind, here it comes, what if I just modified the current user’s plan and let the app think that I am currently in the Premium plan is better. The reason behind this is that going through the comparing logic is a nightmare and lots of effort to understand the underlying logic of the app (which some cases is inevitable unless it works for me in this case 🤭).</p><p>My other confession, to be honest, I literally don’t know how to reproduce it again if I patch its logic, let me illustrate this:</p><ol><li>You need to set a breakpoint to mouse event listener</li><li>Unminified the minified source code and set a breakpoint</li><li>Playing with the debugger and modifying the variable inside the scope that the debugger stopped, also, the variable doesn’t expose to the global I really don’t know how to access it outside without a debugger.</li><li>Make steps 1, 2, and 3 into a script or extension that you don’t need to produce with your own hands again, I’m dead at step 1.</li></ol><p>This is not the road I don’t want to go 😥 (if anyone has any advice on this, feel free to share it in the comment everyone would be appreciated it).</p><p>Luckily, being played with the variable that stores a user’s current plan. I knew that the platform exposed the user variable to the window object, which can be easily accessed by window.user. Modifying the plan in the user variable. I am able to use the Premium Plan’s feature which I can open 8 charts in one layout and up to 10 indicators. 🎉🎊</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*M2O22dRa8V8P-BWr\" /><figcaption>The result is that I can open 8 charts layout in one window which is not allowed in my current plan</figcaption></figure><h3>Create a Script and Automating It</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*5qvRzZV9xnQGlaiG\" /><figcaption>Photo by Phillip Glickman</figcaption></figure><p>Modifying the client-side script doesn’t allow me to perform all its premium features. As you may know, some of its functions require the server side to perform, for instance, setting an alert when the price is below or above, notifications, and some personal preferences persistent.</p><p>With these limitations, I am only allowed to perform client-side, in this scenario, only add more indicators and multiple charts in one layout which is fine for the experiment. One of the reasons that I will make it automatable is to reproduce it before sending the report to their team.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*LtpZjp55XfDKLz9K.jpg\" /><figcaption>Cover photo of “Building your first malicious chrome extension” talk</figcaption></figure><p>Just for an idea, way back in 2020, I attended and was inspired by the talk <a href=\"https://www.youtube.com/watch?v=rXBsYUwMqHU\">“Building your first malicious chrome extension 😈” by Alon Kiriati</a>. I remember that at the networking party I met him and said “I like your talk” 😆.</p><p>In that talk, Alon Kiriati illustrated that if we can create a malicious chrome extension and demo it to us, it can capture the keyboard inputs which are username, password, chittering chat, and much more you can do with the keyboard.</p><p>Here this comes to my mind if we slice a piece of its extension hook, such as when the extension was loaded and the site is <a href=\"https://www.tradingview.com/\">https://www.tradingview.com/</a>, I will also be able to perform code injection to evaluate my current plan to Premium. Nevertheless, it’s just an idea, haha. You can watch his talk at this <a href=\"https://www.youtube.com/watch?v=rXBsYUwMqHU\">link</a>👈.</p><h3>Craft and Send a Report To TradingView’s Team</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*DOiBFASPYRRwuKkm\" /><figcaption>Photo by Valery Tenevoy</figcaption></figure><p>Afterward, before sending it to the TradingView team. I spend a little while reading <a href=\"https://www.tradingview.com/bounty/\">TradingView’s bug program</a> to see if maybe it would be eligible. I found this, to clarify this, I sent an email asking them about this issue to them and see where it goes. And sleep, my eyes need some rest after debugging minified JavaScript code. 😩</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*I2hbTVLbRY4LdfeoGLhWbg.png\" /></figure><p>I woke up in the morning and found this email</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/435/1*e4E2si_xipa4fm9doECFDg.png\" /></figure><p>The response was so fast and they knew it and were fixing this. 🥲</p><h3>Conclusion</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*FPytJWSs8r5lwBOc\" /><figcaption>Photo by Aaron Burden</figcaption></figure><p>In this blog, I explain the thinking process that I used to reverse engineer the platform and how to get into it with the existing tool that you might have used every day and didn’t know about.</p><p>Hope this blog is inspiring or educating you in some way somehow and if you made it just create and share your experience with us. I love to read that, also, with others that have written their experience of bug bounty, how to find it, and the thinking process behind that.</p><p>Last but not least, thank you to TradingView to make an incredible platform for us.</p><h3>Acknowledgment</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*1YRHZDF3QZt_MjKH\" /><figcaption>Photo by Howie R</figcaption></figure><p>This blog might not happen If my brother Wongwarit Yok Borriboonsuksri for reminding me to. After he has seen and remembered the post that I wrote on my personal Facebook wall once. He said that “Why don’t you publish it on the blog”, it’s more than 60 days, and you’d be allowed to. I have sent the email about this issue to the TradingView team as well, and the issue is known (with all due to the fast response).</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=f5855a796c8a\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/ayuth/how-do-i-get-trading-premium-plan-for-free-f5855a796c8a\">How Did I Get Tradingview Premium Plan For Free</a> was originally published in <a href=\"https://medium.com/ayuth\">Ayuth’s Story</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2022-12-22T06:24:35.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    },
    {
      "guid": "https://medium.com/p/3d4f7da1c8ec",
      "url": "https://medium.com/scb-techx/%E0%B9%80%E0%B8%82%E0%B8%B5%E0%B8%A2%E0%B8%99-commit-message-%E0%B9%83%E0%B8%AB%E0%B9%89%E0%B8%94%E0%B8%B5%E0%B8%A2%E0%B8%B4%E0%B9%88%E0%B8%87%E0%B8%82%E0%B8%B6%E0%B9%89%E0%B8%99%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-conventional-commits-%EF%B8%8F-3d4f7da1c8ec?source=rss-37b3ab8c5bd------2",
      "title": "เขียน Commit Message ให้ดียิ่งขึ้นด้วย Conventional Commits ✏️",
      "content_html": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*EqZnr1UCpri-A7pA\" /><figcaption>Photo by Matt Nelson</figcaption></figure><p>ในโลกของ Software Development จะมีสิ่งหนึ่งที่เรียกว่า Source Code ซึ่ง Source Code นี้จะถูกเขียนและร่วมกันพัฒนาขึ้นโดย Software Engineer อยู่ในรูปแบบที่มนุษย์สามารถอ่านและทำความเข้าใจได้ และการนำเอาภาษาเหล่านี้มาคอมไพล์จนเป็นโปรแกรมที่สามารถใช้งานได้บนเว็บเบราว์เซอร์หรือเครื่องของเรา หลายท่านอาจจะเคยเห็นชื่อของภาษาเหล่านี้ผ่านตามาบ้าง เช่น JavaScript, Java, C++, Python, Ruby</p><p>พอจะเห็นภาพกันแล้วว่า Source Code คืออะไร เรามาดูกันต่อในส่วนของการเก็บและดูแลรักษา Source Code ที่ถูกเขียนขึ้นนั้นจะมีสิ่งที่เรียกว่า Version Control System หรือ VCS คอยช่วยติดตามการเปลี่ยนแปลงที่เกิดขึ้น ตัวอย่างเช่น</p><pre>commit 722f8ca8eaba5691e5597f2726535ed0319a1838<br>Author: Ayuth Mangmesap &lt;ayuth.mang@gmail.com&gt;<br>Date:   Sat Jul 30 12:47:42 2022 +0700<br><br>    style: change default font weight variable and add more weights<br><br>diff --git a/components/Header/Header.tsx b/components/Header/Header.tsx<br>index ecbb14a..92dcc49 100644<br>--- a/components/Header/Header.tsx<br>+++ b/components/Header/Header.tsx<br>@@ -48,13 +48,14 @@ const Wrapper = styled.div`<br> `<br><br> const NavLink = styled.a`<br>+  font-weight: var(--font-weight-regular);<br>   text-decoration: none;<br>   cursor: pointer;<br>   color: inherit;<br> `<br><br> const HomeLink = styled(NavLink)`<br>-  font-weight: var(--font-weight-bold);<br>+  font-weight: var(--font-weight-extra-bold);<br>   text-transform: uppercase;<br> `<br>...</pre><p>จากโค้ดด้านบนจะเห็นได้ว่า บรรทัดสีแดงคือบรรทัดที่ถูกลบไป ส่วนบรรทัดสีเขียวคือส่วนที่ถูกเพิ่มเข้ามาแทนที่ แทนที่โดยใคร วัน เวลา วันที่เท่าไร จึงทำให้เราสามารถติดตามการเปลี่ยนแปลงได้อย่างชัดเจนและการเปลี่ยนแปลงเหล่านี้จะถูกเก็บเป็นประวัติที่สามารถย้อนกลับมาหาได้ทุกเมื่อเช่นกัน นี่จึงเป็นสิ่งที่ทำให้ VCS อย่างเช่น Git ได้รับความนิยมมาก อย่างไรก็ตามบล็อกนี้จะไม่ใช่การอธิบายเกี่ยวกับ Git หรือ VCS (Version Control System)เจ้าไหน มีบล็อกที่อธิบายได้ดีอยู่แล้วครับ</p><p>อธิบายสำหรับท่านที่ไม่ใช่สาย Dev การ commit เปรียบเสมือนการเลือกเอาพัสดุใส่ลงไปในกล่องจากนั้น “<strong>ปิดผนึกกล่อง</strong>” และ “<strong>แปะข้อความ</strong>” ลงไปว่าในกล่องนั้นเก็บอะไรอยู่บ้าง</p><ul><li>📦 การ<strong>ปิดผนึกกล่อง</strong> เปรียบเสมือน commit</li><li>📝 การ<strong>แปะข้อความ</strong>ลงบนกล่องที่ผนึก เปรียบเสมือน commit message</li></ul><h3>ทำไมต้องเขียน Commit ให้ดีและมีความหมาย?</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*EOBTEfKI_PB096sd\" /><figcaption>Photo by Markus Winkler</figcaption></figure><p>Commit Message ถือได้ว่าเป็นอีกหนึ่งทางที่นักพัฒนาใช้สื่อสารกันด้วยการอ่าน นอกเหนือจากการสื่อสารด้วยการพูดคุยกัน การศึกษาทางประวัติศาสตร์ทำให้เราเข้าใจว่าสิ่งรอบตัวเราในปัจจุบันนั้นมีประวัติความเป็นมาอย่างไร เปลี่ยนแปลงไปเมื่อไร ใครเป็นคนเปลี่ยน เช่นเดียวกับ Commit Message ถ้าใครเคยอ่าน Handbook ของ GitLab มีประโยคหนึ่งที่น่าสนใจเขียนไว้ว่า</p><blockquote>Reading is much faster than listening.</blockquote><p>เอาละมาดูข้ออดีแต่ละข้อกันดีกว่า</p><ul><li>Commit Message ที่ดีจะทำให้ทำความ<strong>เข้าใจ</strong>โค้ดและ<strong>แก้ปัญหา</strong>ได้เร็วขึ้น → เช่น โค้ดบรรทัดนี้เกิดมาได้อย่างไร เกิดเพราะอะไร เกิดขึ้นเมื่อไร ใครเป็นคนเขียน</li><li>เพิ่มประสิทธิภาพในการสื่อสารในทีม → เพราะ<strong>เราไม่ได้ทำงานคนเดียว</strong></li><li><strong>ลดระยะเวลา</strong>ในการค้นหาประวัติ Commit เก่า ๆ → ในกรณีที่เกิดปัญหาขึ้นไม่ว่าจะเป็น bug ใน production การค้นหา commit ที่เขียนได้มีความหมายจะช่วยลดระยะเวลาในการย้อนกลับมาและแก้ปัญหาได้ทันท่วงที</li><li>สามารถสร้าง Automation tools เพื่อทำให้ commit ที่ push ขึ้นไปสั่งไปทำงานบางอย่างได้ เช่น build, rebuild หรือ publish ก็ตาม</li></ul><p>ลองมาดูตัวอย่างระหว่างใน คุณหมา(🐶) กับ คุณแมว(😸) กันบ้างด้วยตัวอย่างที่ง่ายที่สุด</p><p>หมา(🐶): Update README.md file</p><p>แมว(😸): docs: update README.md file</p><p>สังเกตเห็นไหมครับว่าระหว่างนาย A กับนาย B มี message ที่เหมือนกัน เพียงแต่นาย B มีคำว่า “docs” อยู่ด้านหน้า ถ้าอ่านโดยผ่านตาเราจะทราบว่าทำอะไรสักอย่างเกี่ยวกับ README.md ในหัวข้อถัดไปว่านอกเหนือจากคำว่า “docs” แล้วมีอะไรอีกบ้าง ตัวอย่างต่อไป</p><p>หมา(🐶): add the register feature</p><p>แมว(😸): feat(api)!: add the register feature</p><p>*หมายเหตุ เครื่องหมาย “!” แสดงถึงการที่มี breaking changes อยู่ใน commit นั้น</p><p>หมา(🐶): update README.md</p><p>แมว(😸): docs: update README.md</p><p>ตัวอย่างสุดท้าย</p><p>หมา(🐶): change the button color</p><p>แมว(😸): style(homepage): change the button color (#7832)</p><p>ถ้าเราสังเกตให้ดี จะเห็นว่าแค่ส่วนของ style ที่เป็น prefix ข้างหน้าเราก็พอรู้แล้วว่าสิ่งที่ commit มานั้นเกี่ยวกับอะไร แทบจะไม่ต้องดูลงลึกไปในรายละเอียดด้วยซ้ำ ช่วยให้ประหยัดเวลาได้เยอะทีเดียว</p><p>ลองจินตนาการว่าถ้าเราไม่ได้มีแค่โปรเจคเดียว แต่มีเป็น 10 หรือลามไป 100 โปรเจค และท่านต้องค้นหาว่าบัคนี้ถูกเอาขึ้นมาตอนไหนแล้วละก็ น้ำตาท่านอาจจะคลอเบ้าได้ (เคสจริงไม่อิงนิยาย 🫣)</p><h3>รูปในการเขียน Conventional Commits</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*C4p8qlG4O4K6re-6\" /><figcaption>Photo by Ravi Palwe</figcaption></figure><p>เกริ่นกันถึงข้อดีและทำไมเราถึงต้องเขียน Commit Message ให้ดีและมีความหมายมาแล้ว ทีนี้มาดูโครงสร้างของ Commit กันบ้าง โครงสร้างของ commit จะประกอบด้วย 3 ส่วน คือ type, scope, description, bodyและ footer</p><pre>&lt;type&gt;[optional scope]: &lt;description&gt;<br><br>[optional body]<br><br>[optional footer(s)]</pre><h4>type</h4><p>สำหรับ type จะเป็นได้ดังนี้</p><ul><li>fix → การแก้บัค</li><li>feat → การเพิ่ม feature ใหม่</li><li>docs → สำหรับการเปลี่ยนแปลงแค่ documentation (ไม่กระทบกับโค้ดหลัก)</li><li>style → สำหรับการเปลี่ยนแปลงที่ไม่ได้เปลี่ยนแปลงความหมายของโค้ด เช่น ลบ white-space, การแก้ format, หรือเติม semi-colon ที่หายไป</li><li>refactor → สำหรับการแก้ไขที่ไม่ใช่การแก้บัค(fix) หรือ เพิ่มความสามารถใหม่(feature)</li><li>chore → การเปลี่ยนแปลงที่ไม่ใช่การแก้บัค(fix)หรือการเพิ่มความสามารถใหม่(feature) เช่น การอัพเดท dependencies</li><li>test → เพิ่มส่วนของ test แก้ไขเทสเคสเดิมให้สมบูรณ์ยิ่งขึ้น</li><li>อื่น ๆ → build , ci , pref , revert</li></ul><h4>scope (optional)</h4><p>scope → จะต้องเป็นขอบเขตที่กำหนดไว้ ถ้าในโปรเจคของเราจะมีส่วนของ docs หรือ core package หลัก อันนี้แล้วแต่ทีมท่านตกลงกันว่าจะมีอะไรบ้าง ผมลองเอาตัวอย่าง scope จาก Angular โปรเจคจะมีดังนี้เผื่อจะเป็นไอเดียให้เราได้</p><pre>The following is the list of supported scopes:<br><br>- animations<br>- common<br>- compiler<br>- compiler-cli<br>- core<br>- elements<br>- forms<br>- http<br>- language-service<br>- platform-browser<br>- platform-browser-dynamic<br>- platform-server<br>- platform-webworker<br>- platform-webworker-dynamic<br>- router<br>- service-worker<br>- upgrade</pre><h4>description หรือ subject</h4><p>ส่วนนี้จะเป็นข้อความที่สั้น กระชับ ที่บ่งบอกการเปลี่ยนแปลงของ commit นั้น</p><ul><li>ต้องเป็นประโยคหรือข้อความที่แสดงถึงความเป็นปัจจุบัน (present tense)</li><li>ไม่ต้องขึ้นต้นด้วยตัวใหญ่</li><li>และไม่ต้องมีเครื่องหมายจุด (.) ต่อท้าย</li></ul><h4>body​ (optional)</h4><p>ส่วนที่ขยายต่อมาจากส่วน subject ส่วนนี้จะ</p><p>ในส่วนของ body นั้นจะต้องบ่งบอกหรือแสดงถึงแรงจูงในที่ทำให้เกิด commit นี้หรือสิ่งที่ขัดแย้งจากสิ่งเดิมหรือพฤติกรรมเดิมที่มีอยู่แล้ว</p><p>คือส่วนที่</p><h4>footer (optional)</h4><p>ในส่วนนี้สามารถลิงค์ไปที่หมายเลข Issue ในโปรเจคหรือ Jira ที่ commit นี้ได้แก้ปัญหาหรือปิดไปได้เช่นกัน</p><p>สำหรับใครอยากอ่านต่อ เว็บ <a href=\"https://www.conventionalcommits.org/th/v1.0.0/\">Conventional Commits มีภาษาไทยด้วย!</a> สามารถไปอ่านกันได้ครับ</p><p><a href=\"https://www.conventionalcommits.org/th/v1.0.0/\">Conventional Commits</a></p><h3>ตัวอย่างจริง Angular Repository บน GitHub</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/480/0*5yBkf4liXdIj9Fhw.png\" /></figure><p>ปกติผมเป็นคนที่ชอบ explore ใน GitHub อยู่แล้ว พวกเครื่องมือที่ Developers ใช้จะ Open Source อยู่แล้ว ผมจะชอบไปขุดคุ้ยดูว่าโปรเจคใหญ่ ๆ ที่มีคนใช้งานรวมถึงดาวน์โหลดมากกว่าล้านครั้งเขามีการบริหารจัดการอย่างไร หรือแนวทางปฏิบัติที่ส่วนไหนที่เราสามารถทำมาใช้กับโปรเจคของเราได้บ้างไหม แน่นอนว่าได้เรียนรู้อะไรเยอะแยะเลยครับ</p><p>ถ้าเราเปิดดู <a href=\"https://github.com/angular/angular\">Angular</a> โปรเจคใน GitHub จะเห็นส่วนหนึ่งที่อยู่ใน Contribution Guideline นั่นคือ <a href=\"https://github.com/angular/angular/blob/main/CONTRIBUTING.md#-commit-message-format\">Commit Message Format</a> โดยในส่วนของคู่มือนี้จะเขียนแนวทางในการเขียน commit message อย่างชัดเจนว่าเขาจะแบ่ง commit message ออกเป็น 3 ส่วนคือ header, body และ footer ซึ่งในที่นี้เราจะมาดูส่วนที่เกี่ยวข้องในบทความนี้คือส่วนของ header ครับ</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*nIJ-5H_XS6wLHM8N59M7IQ.png\" /><figcaption>Commit Message Header from <a href=\"https://github.com/angular/angular/blob/main/CONTRIBUTING.md#-commit-message-format\">angular’s project</a></figcaption></figure><p>เขาจะเล่าว่ามี type ไหนบ้างที่อนุญาตให้ใช้และ scope ไหนให้ใช้งานและข้อความด้านหลังสุดควรจะเป็น short summary หรือสรุปสั้น ๆ นั่นเอง</p><pre>&lt;type&gt;(&lt;scope&gt;): &lt;short summary&gt;<br>  │       │             │<br>  │       │             └─⫸ Summary in present tense. Not capitalized. No period at the end.<br>  │       │<br>  │       └─⫸ Commit Scope: animations|bazel|benchpress|common|compiler|compiler-cli|core|<br>  │                          elements|forms|http|language-service|localize|platform-browser|<br>  │                          platform-browser-dynamic|platform-server|router|service-worker|<br>  │                          upgrade|zone.js|packaging|changelog|docs-infra|migrations|ngcc|ve|<br>  │                          devtools<br>  │<br>  └─⫸ Commit Type: build|ci|docs|feat|fix|perf|refactor|test</pre><p>ที่น่าสนใจกว่านั้นคือทางทีมที่ดูแลโปรเจค Angular ได้นำพวกแนวทางที่เขียนไว้มาทำเป็นเครื่องมือเพื่อเช็คในว่าในแต่ละครั้งที่เรามีการ commit นั้น ในส่วนของ commit message ได้ตรงตามที่โปรเจคระบุไว้หรือเปล่า</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/646/1*sZ4m5LPKXhHJ4AxCaXgiGg.png\" /><figcaption>Unsupported commit message captured by pre-commit message of an angular project</figcaption></figure><p>เขาจะเล่าว่ามี type ไหนและ scope ไหนที่อนุญาตให้ใช้งานบ้าง</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/901/1*KW4cC9N9BJoME9nhwmgCCA.png\" /><figcaption>Overview of commits of the angular’s project on github.com</figcaption></figure><h3>สรุป</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*tuy3-YhTXpWAKu8g\" /><figcaption>Photo by Peter Fogden</figcaption></figure><p>การเขียน Commit Message ให้ดีและมีความหมายนั้นนอกจากจะทำให้ การสื่อสารในทีมและระหว่างทีม การเพิ่มทำให้ประสิทธิภาพในการทำงานที่มากขึ้น การช่วยให้กลับมาประวัติต่าง ๆ ได้อย่างไม่ต้องเสียเวลา พร้อมทั้งตัวอย่างที่เห็นภาพได้ชัดเจนไปแล้ว</p><p>นอกจากนี้ยังได้ยกตัวอย่างโปรเจค <a href=\"https://github.com/angular/angular\">Angular</a> ของ Google ที่ได้มีการเขียนแนวทางการปฏิบัติในการทำงานร่วมกันอย่างชัดเจนสำหรับการเขียน Commit Message เอาไว้ ทำให้สามารถทำงานร่วมกับ Engineers จากทั่วมุมโลกได้ นอกจากนี้ยังสร้างเครื่องมือสำหรับการตรวจสอบ Commit Message ว่าได้ตรงกับแนวทางปฏิบัติที่ได้กำหนดไว้ด้วยเช่นกัน</p><p>หากท่านใดสนใจที่จะนำไปใช้หรือเคยใช้กับทีมของท่านเอง สามารถคอมเม้นท์ด้านล่างเพื่อแชร์ประสบการณ์ได้เพื่อน ๆ ได้อ่านเช่นกันครับ หรือท่านใดยังไม่มีแนวทางในใจ ถ้าจะเอาไปลองใช้ก็คงจะเป็นจุดเริ่มต้นที่ดีไม่น้อยเลยละ</p><blockquote>เขียน Commit Message ให้ดีขึ้น … แล้วชีวิตคุณจะเปลี่ยนไป</blockquote><h3>ช่วงขายของ GitKraken</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*wq7kpeompKZ6BvMeiwdUyw.jpeg\" /><figcaption>Visualize Commit History Preview</figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*aBxiLSxgCK2s4RsZjCqT8w.jpeg\" /></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Qjjm9u1gn3bJ7_iCKPsT2Q.jpeg\" /><figcaption>Other features preview</figcaption></figure><p>เมื่อพูดถึง Git ต้องนึกถึง <a href=\"https://www.gitkraken.com/invite/cxKQCcQq\">GitKraken</a> ในฐานะ GitKraken Ambassador แล้วละก็จะไม่พูดถึงก็กระไรอยู่ ขอพื้นที่สักหน่อย (ตอนแรกว่าจะไม่ขายละ … เอาตอนหลังเลยคืออดไม่ได้)</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*rOp1hYaHhe9qQolA.png\" /><figcaption>Measure How Fast PRs get Merged Preview</figcaption></figure><p><strong>GitKraken</strong> คือ Git UI ที่ดีที่สุดตอนนี้ มันสามารถต่อได้ทั้ง GitHub, GitHub Enterprise, GitLab​ + Enterprise, BitBucket อีกทั้งต่อกับพวก Jira, Trello ได้ แถมยังใช้ GitFlow ในตัว มี Terminal ในตัว และสามารถมีหลายโปรไฟล์ไม่ว่าจะเป็น​โปรไฟล์ที่ทำงาน หรือโปรไฟล์ส่วนตัว ใช้ได้ทั้ง macOS, Windows, Linux ขายขนาดนี้ไม่ลองไม่ได้แล้ว!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/910/1*iNyZsCdCrwxeffWfPj9cKA.png\" /></figure><p>ตอนที่เขียนนี้ได้ขึ้นเวอร์ชัน 9 เป็นที่เรียบร้อย มีการออกแบบ UI ใหม่ทั้งหมด เพิ่มฟีเจอร์ที่น่าสนใจเยอะมากสามารถไปลองกันได้เลยครับ</p><p><a href=\"https://www.gitkraken.com/invite/cxKQCcQq\">You&#39;re Invited to Use GitKraken Client!</a></p><p>ไม่ใช้ไม่เป็นไร … นึกถึงกันไว้ก็พอ 🫶</p><h3>แหล่งอ้างอิง</h3><ul><li><a href=\"https://www.conventionalcommits.org/\">https://www.conventionalcommits.org/</a></li><li><a href=\"https://www.conventionalcommits.org/th/v1.0.0/\">https://www.conventionalcommits.org/th/v1.0.0/</a></li><li><a href=\"https://medium.com/swlh/why-should-i-write-good-commit-messages-e15d37bf45cb\">https://medium.com/swlh/why-should-i-write-good-commit-messages-e15d37bf45cb</a></li><li><a href=\"https://www.freecodecamp.org/news/how-to-write-better-git-commit-messages/\">https://www.freecodecamp.org/news/how-to-write-better-git-commit-messages/</a></li><li><a href=\"https://reflectoring.io/meaningful-commit-messages/\">https://reflectoring.io/meaningful-commit-messages/</a></li></ul><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3d4f7da1c8ec\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/scb-techx/%E0%B9%80%E0%B8%82%E0%B8%B5%E0%B8%A2%E0%B8%99-commit-message-%E0%B9%83%E0%B8%AB%E0%B9%89%E0%B8%94%E0%B8%B5%E0%B8%A2%E0%B8%B4%E0%B9%88%E0%B8%87%E0%B8%82%E0%B8%B6%E0%B9%89%E0%B8%99%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-conventional-commits-%EF%B8%8F-3d4f7da1c8ec\">เขียน Commit Message ให้ดียิ่งขึ้นด้วย Conventional Commits ✏️</a> was originally published in <a href=\"https://medium.com/scb-techx\">SCB TechX</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2022-12-18T06:18:04.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    },
    {
      "guid": "https://medium.com/p/c5374086c729",
      "url": "https://medium.com/scb-techx/%E0%B8%81%E0%B8%A5%E0%B9%89%E0%B8%B2%E0%B8%95%E0%B8%B1%E0%B9%89%E0%B8%87%E0%B8%84%E0%B8%B3%E0%B8%96%E0%B8%B2%E0%B8%A1%E0%B8%81%E0%B8%B1%E0%B8%9A%E0%B8%AA%E0%B8%B4%E0%B9%88%E0%B8%87%E0%B9%80%E0%B8%94%E0%B8%B4%E0%B8%A1-%E0%B8%A2%E0%B8%B6%E0%B8%94%E0%B8%A5%E0%B8%B9%E0%B8%81%E0%B8%84%E0%B9%89%E0%B8%B2%E0%B9%80%E0%B8%9B%E0%B9%87%E0%B8%99%E0%B8%A8%E0%B8%B9%E0%B8%99%E0%B8%A2%E0%B9%8C%E0%B8%81%E0%B8%A5%E0%B8%B2%E0%B8%87-%E0%B8%A1%E0%B8%B5-growth-mindset-ceo-%E0%B9%81%E0%B8%8A%E0%B8%A3%E0%B9%8C-culture-%E0%B8%82%E0%B8%AD%E0%B8%87-scb-c5374086c729?source=rss-37b3ab8c5bd------2",
      "title": "“กล้าตั้งคำถามกับสิ่งเดิม, ยึดลูกค้าเป็นศูนย์กลาง, มี Growth Mindset”: CEO แชร์ Culture ของ SCB…",
      "content_html": "<h3>“กล้าตั้งคำถามกับสิ่งเดิม, ยึดลูกค้าเป็นศูนย์กลาง, มี Growth Mindset”: CEO แชร์ Culture ของ SCB TechX</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uZF1V2ac-P4Vp3rxwB9jgw.png\" /><figcaption>Cover photo by Pattaporn Lertmanka</figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*q2Hb2ZcHJOKzMSB-\" /></figure><p>บทความนี้เป็นการหยิบยกเอาหัวข้อที่น่าสนใจในเซสชัน “ผู้นำกับการสร้างทีมในยุคดิจิทัลแบบพี่แว่น SCB TechX” ที่ไลฟ์​ ณ วันที่ 23 มิถุนายน 2565 จัดโดย SCB Academy มาเล่าสู่กันฟังครับ</p><p>หนึ่งในหัวข้อการสัมภาษณ์ที่น่าสนใจจนอยากนำมาเขียนให้ได้อ่านกันคือเรื่องวัฒนธรรมองค์กรหรือ Culture ในบทสัมภาษณ์นี้ พี่แว่นได้พูดถึงวัฒนธรรมองค์กรที่สำคัญของ SCB TechX 5 เรื่อง ดังนี้ครับ (ซึ่งความจริงแล้วมีมากกว่านี้อีก!)</p><h4><strong>Customer Centric 😊</strong></h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*rz3eWmER_VL20_AM\" /><figcaption>Photo by <a href=\"https://unsplash.com/@dylandgillis\">Dylan Gillis</a></figcaption></figure><p>แต่เดิมการสร้าง Product นั้นจะมาจากการที่สร้างและการนำ Product มาเป็นศูนย์กลาง พร้อมโหมกระหน่ำด้วย Marketing แคมเปญที่ทำให้ Product นั้นเป็นที่ยอมรับ แต่ที่ SCB TechX เรามองต่าง เราจะเอา Customer เป็นศูนย์กลางเป็นอันดับแรก จากนั้นจะต้องหา Pain Point ของลูกค้าให้ได้ว่าคืออะไร หลังจากนั้นค่อยเป็นกระบวนการที่จะหา Solution ที่จะเข้าไปแก้ ด้วยเหตุนี้ Product ของเราจึงเป็นที่ยอมรับเพราะเราเอา <strong>Customer เป็นศูนย์กลาง </strong>ไม่ใช่ Product</p><h4><strong>Inclusive Collaboration 🤝</strong></h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*Q_l6Q2YFFBeG80W8\" /><figcaption>Photo by <a href=\"https://unsplash.com/@varpap\">Vardan Papikyan</a></figcaption></figure><p>ที่ SCB TechX มีโครงสร้างองค์กรแบบแนวราบ (Flat Organization) ทำให้ทุกคนมีอิสระในการแสดงความคิดเห็นอย่างเท่าเทียมพร้อมทั้งสภาพแวดล้อมในการทำงานที่ทุกคนสบายใจ เปิดโอกาสให้ทุกคนกล้าพูด กล้าเสนอความคิดเห็น และในทุกความคิดเห็นและ Feedback จะถูกรับฟังเสมอเพราะเราเชื่อว่า <strong>“ไม่มีความเห็นใดที่ห่วยหรือแย่”</strong> ทุกความคิดเห็นและ Feedback มีค่าไม่ว่าจะทำงาน Role ไหนก็ตาม</p><h4><strong>Growth Mindset 💪</strong></h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*nJhsJP7faA6qw9x7\" /><figcaption>Photo by <a href=\"https://unsplash.com/@srz\">sydney Rae</a></figcaption></figure><p>Growth Mindset เป็นสิ่งแทบจะทุกบริษัทอยากให้พนักงานทุกคนมี แน่นอนว่า SCB TechX ก็เช่นกัน เราพร้อมที่จะ Challenge สิ่งที่มีอยู่เดิมโดยและพร้อมเปลี่ยนแปลงไม่ใช่ให้เหตุผลแค่ว่า “ที่ทำมาแบบนี้เพราะว่าเมื่อก่อนก็ทำแบบนี้มา” แต่เราเปิดรับ Feedback เพื่อพัฒนากระบวนการต่าง ๆ ขึ้นเสมอ ถ้าเรื่องไหนที่ไม่จำเป็นต้องทำและเราหาเหตุผลได้ เราก็พร้อมจะยกเลิกเรื่องที่ไม่จำเป็นออกไปได้ โดยเราสามารถคุยกับพี่ ๆ ในทีมหรือ Lead ได้ทันที</p><h4><strong>Risk-taking 📈</strong></h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*fNwjj8ltT_UVek-W\" /><figcaption>Photo by <a href=\"https://unsplash.com/@rahadiansyah\">Rahadiansyah</a></figcaption></figure><p>นอกเหนือจาก Growth Mindset ที่จะทำให้เราเติบโตและพัฒนาตัวเองรวมถึงพัฒนาทีมขึ้นไปได้ในทุกวันแล้ว การ Take Risk ที่อยู่นอกเหนือจาก Comfort Zone ของเราก็ทำให้เราเติบโตเช่นเดียวกัน ทั้งนี้ Risk จะต้องอยู่ในความเสี่ยงที่ควบคุมได้ (Control Risk) ถ้าพูดกันภาษาง่าย ๆ คือ ถ้าเกิดความเสียหายขึ้นจะไม่กระทบต่อภาพรวมทั้งหมด</p><p>ยกตัวอย่างในทางเทคนิคคือ ถ้าเราออกฟีเจอร์ใหม่ไป เราจะต้องมีสวิทซ์ที่สามารถควบคุมการ เปิด-ปิด ฟีเจอร์เหล่านั้นได้ทันที ถึงแม้ว่าถ้าฟีเจอร์นั้นพังหรือไม่สามารถใช้งานได้ ก็ต้องพร้อมที่จะ Rollback ฟีเจอร์เหล่านั้นหรือระบบได้อย่างรวดเร็วและทันที โดยที่ Customer อาจรู้สึกว่าแป๊บเดียวหรืออาจไม่รู้สึกเลยว่าเกิดอะไรขึ้นกับระบบ</p><p>อีกตัวอย่างในด้านการทำงาน เช่น ถ้าเรามี Pain Point ในการทำงานระหว่างแต่ละ Role ในทีมและเราอยากจะลองทำอะไรที่จะช่วย Improve Working Process ได้เราก็สามารถคุยกับหัวหน้าว่า อยากจะขอทดลองอะไรใหม่ ๆ ถ้าหัวหน้าโอเค ก็สามารถทำได้โดยที่ไม่ต้องขออนุญาตจากพี่แว่น พอทดลองทำเสร็จแล้วลองเอามาใช้และมันโอเค เราก็พร้อมจะสนับสนุนเต็มที่</p><h4><strong>Accomplish Your Best 🏆</strong></h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*eXW5vZlrxC9ZtQk7\" /><figcaption>Photo by <a href=\"https://unsplash.com/@jontyson\">@jontyson</a></figcaption></figure><p>SCB TechX เรามาด้วย High Standard โดยเราจะไม่ Compromise บน Standard ของเรา เช่น เราเจอบางเรื่องที่ไม่ตรงตาม Standard ของเราและบอกว่าอยากจะ Compromise โดยส่วนใหญ่คำตอบของเราคือ <strong>ไม่ Compromise </strong>ถึงแม้ว่าเราจะต้อง Rework เพราะว่ามันยังไม่ดี ถึงแม้ว่าเราจะต้องขาดทุนในโปรเจคนั้นหรือต้องยืดระยะเวลาออกไป เราก็พร้อมที่จะกลับไปทำเพื่อให้ได้ตามมาตรฐานของเรา</p><h3>สรุป</h3><p>หากคุณชอบ Culture ที่ ยึดลูกค้าเป็นศูนย์กลาง (Customer Centric), มีสภาพแวดล้อมการทำงานที่สบายใจ ทุกคนคุยกันให้ Feedback กันได้ในด้านต่าง ๆ (Inclusive Collaboration), Challenge สิ่งที่มีอยู่เดิมและพร้อมจะเปลี่ยนแปลง(Growth Mindset), ลองทำสิ่งใหม่ที่ออกนอก Comfort Zone (Risk-taking), ไม่ Compromise บน Standard ของเรา (Accomplish Your Best) ละก็ อย่าลืมไปส่องตำแหน่งที่เปิดรับที่ 👉 <a href=\"https://www.scbtechx.io/?page_id=1244\"><strong>Link</strong></a> หรือที่<a href=\"https://www.linkedin.com/company/scb-tech-x/jobs/\"> </a>👉 <a href=\"https://www.linkedin.com/company/scb-tech-x/jobs/\"><strong>LinkedIn</strong></a> ได้เลย!</p><h3><strong>ส่งท้าย</strong></h3><p>ขอขอบคุณทางพิธีกรทั้งสองท่านทั้ง พี่บอย-ปิยวิทย์ พี่เตย-บัณฑิตา และทาง SCB Academy ที่เป็นโฮสต์และจัดการสัมภาษณ์ครั้งนี้ด้วยครับ</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*DkvmhwfqLyr9PvgidWDj7g.png\" /><figcaption>โปสเตอร์: เรื่องนี้พี่อยากแชร์ LIVE : EP.4 ผู้นำกับการสร้างทีมในยุคดิจิทัลแบบ พี่แว่น TechX</figcaption></figure><p>บทความนี้เป็นการหยิบยกเอาหัวข้อที่น่าสนใจในเซสชัน “ผู้นำกับการรสร้างทีมในยุคดิจิทัลแบบพี่แว่น TechX” ที่ไลฟ์​ ณ วันที่ 23 มิถุนายน 2565 ครับ ที่จัดโดย SCB Academy ครับ</p><p>Editorial: <a href=\"https://medium.com/@pindaphi\">Pinda Phisitbutra</a></p><h3>References</h3><ul><li><a href=\"https://medium.com/scb-techx/scb-techx-%E0%B8%84%E0%B8%B7%E0%B8%AD%E0%B9%83%E0%B8%84%E0%B8%A3-e4eb4d2ff6f2\">SCB TechX คือใคร</a></li><li><a href=\"https://scbtechx.io/?page_id=1244\">Jobs</a></li></ul><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=c5374086c729\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/scb-techx/%E0%B8%81%E0%B8%A5%E0%B9%89%E0%B8%B2%E0%B8%95%E0%B8%B1%E0%B9%89%E0%B8%87%E0%B8%84%E0%B8%B3%E0%B8%96%E0%B8%B2%E0%B8%A1%E0%B8%81%E0%B8%B1%E0%B8%9A%E0%B8%AA%E0%B8%B4%E0%B9%88%E0%B8%87%E0%B9%80%E0%B8%94%E0%B8%B4%E0%B8%A1-%E0%B8%A2%E0%B8%B6%E0%B8%94%E0%B8%A5%E0%B8%B9%E0%B8%81%E0%B8%84%E0%B9%89%E0%B8%B2%E0%B9%80%E0%B8%9B%E0%B9%87%E0%B8%99%E0%B8%A8%E0%B8%B9%E0%B8%99%E0%B8%A2%E0%B9%8C%E0%B8%81%E0%B8%A5%E0%B8%B2%E0%B8%87-%E0%B8%A1%E0%B8%B5-growth-mindset-ceo-%E0%B9%81%E0%B8%8A%E0%B8%A3%E0%B9%8C-culture-%E0%B8%82%E0%B8%AD%E0%B8%87-scb-c5374086c729\">“กล้าตั้งคำถามกับสิ่งเดิม, ยึดลูกค้าเป็นศูนย์กลาง, มี Growth Mindset”: CEO แชร์ Culture ของ SCB…</a> was originally published in <a href=\"https://medium.com/scb-techx\">SCB TechX</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2022-09-12T03:33:10.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    },
    {
      "guid": "https://medium.com/p/be05c6e015f0",
      "url": "https://medium.com/scb-techx/%E0%B8%88%E0%B8%B1%E0%B8%94%E0%B8%81%E0%B8%B2%E0%B8%A3-flutter-%E0%B8%AB%E0%B8%A5%E0%B8%B2%E0%B8%A2%E0%B9%80%E0%B8%A7%E0%B8%AD%E0%B8%A3%E0%B9%8C%E0%B8%8A%E0%B8%B1%E0%B8%99%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-fvm-flutter-version-manager-be05c6e015f0?source=rss-37b3ab8c5bd------2",
      "title": "จัดการ Flutter หลายเวอร์ชันด้วย fvm (flutter version manager)",
      "content_html": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*oKzZqR9wHmFonXuun3dXYw.png\" /><figcaption>Advised by: Pattaporn Lertmanka (Fai)</figcaption></figure><p>เมื่อไม่นานมานี้ผมได้มีโอกาสสร้าง MVP ตัวหนึ่งด้วย Flutter และด้วยความที่ส่วนตัวเป็นคนชอบเข้าไปดู ค้นหาโปรเจคทั้งหลายที่มีคนเคยเขียนไว้ใน GitHub เพื่อดูว่า Open Source โปรเจคต่าง ๆ เขามีวิธีการเขียน Widget ที่สามารถนำกลับมาใช้งานใหม่ได้อย่างไรกันบ้าง การจัดการ codebase อย่างไร หรือแอบจิ๊กเอา GitHub Workflow ไฟล์มาปรับในโปรเจคบ้างก็มี แต่เอาละเข้าเนื้อหากันเลย</p><p>ตอนนั้นคือผม clone โปรเจคลงมาแล้วลองนำมาเล่นบนเครื่องตัวเองทำให้เจอปัญหาในหลายเรื่องไม่ว่าจะเป็น โปรเจคเก่าไปแล้ว Flutter SDK หรือ dart ในเครื่องมีเวอร์ชันที่ใหม่ไปทำให้การนำมารันทำได้ค่อนข้างยาก รวมถึงการอัพเกรดและดาวน์เกรดเช่นกัน</p><p>การอัพเดทและดาวน์เกรดก็มีปัญหาเช่นกัน ถ้าใครเคยลงด้วย Homebrew การอัพเกรดอาจทำให้ Environment path ผิดทำให้ต้องมาเซ็ทใหม่กันอีกรอบเพราะเลขเวอร์ชันเปลี่ยนไป</p><h4>แล้ว flutter upgrade | downgrade ใช้ไม่ได้เหรอ?</h4><p>ใช้ได้เช่นกับครับ ถ้าเราสามารถใช้ได้อย่างไม่มีปัญหา แต่ผมลองใช้แล้วติดปัญหาตรงที่ถ้าเกิดเรา downgrade flutter จะเวิร์คกับเวอร์ชันที่อยู่ใน <a href=\"https://github.com/flutter/flutter/wiki/Flutter-build-release-channels\">Flutter build release channel</a> เท่านั้น ถ้าต่ำหรือเก่ากว่าหรือระบุเป็นเลขเวอร์ชันไปเลยก็จะไม่ได้ละ</p><pre>$ flutter channel<br>Flutter channels:<br>  master<br>  beta<br>* stable</pre><pre>$ flutter downgrade 2.0.0<br>There is no previously recorded version for channel &quot;stable&quot;.</pre><h3>fvm คืออะไร</h3><p>หากใครเคยใช้ <a href=\"https://github.com/nvm-sh/nvm\">nvm</a>, <a href=\"https://github.com/rbenv/rbenv\">rbenv</a>, <a href=\"https://github.com/jenv/jenv\">jenv</a> สิ่งนี้คือสิ่งเดียวกันเลยครับ มันจะช่วยให้มี Flutter หลายเวอร์ชันได้ในเครื่องเดียว รวมถึงการจัดการ การสลับไปมาระหว่างเวอร์ชันได้อย่างไร้รอยต่อ (หากใครไม่เคยใช้ nvm สามารถอ่านต่อได้ที่<a href=\"https://medium.com/ayuth/%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B8%88%E0%B8%B1%E0%B8%81-nvm-node-version-manager-%E0%B9%81%E0%B8%A5%E0%B8%B0%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%83%E0%B8%8A%E0%B9%89%E0%B8%87%E0%B8%B2%E0%B8%99%E0%B8%88%E0%B8%9A%E0%B8%84%E0%B8%A3%E0%B8%9A%E0%B8%97%E0%B8%B8%E0%B8%81%E0%B8%AD%E0%B8%A2%E0%B9%88%E0%B8%B2%E0%B8%87%E0%B9%83%E0%B8%99%E0%B8%9A%E0%B8%A5%E0%B9%87%E0%B8%AD%E0%B8%81%E0%B9%80%E0%B8%94%E0%B8%B5%E0%B8%A2%E0%B8%A7-e3f44545504f\">บล็อกนี้ครับ</a>) เพื่อไม่ให้เสียเวลาเรามาดูวิธีการใช้งานดีกว่าครับ</p><h4>ติดตั้ง fvm</h4><p>ขั้นแรกก่อนที่จะใช้งานเราจำเป็นต้องติดตั้ง fvm (ต้องมี <a href=\"https://brew.sh/\">Homebrew</a>) ก่อนครับ</p><pre>$ brew tap leoafarias/fvm<br>$ brew install fvm</pre><h4>เลือกเวอร์ชันของ SDK</h4><p>หลังจากติดตั้งเสร็จเรียบร้อยแล้ว เรามาเลือกเวอร์ชันของ SDK ที่ต้องการจะติดตั้งโดยการการใช้คำสั่ง fvm releases</p><pre>$ fvm releases<br>...<br>Mar 28 22  │ 2.10.4<br>Apr 6 22   │ 2.12.0-4.2.pre<br>Apr 6 22   │ 2.12.0-4.2.pre<br>--------------------------------------<br>Apr 13 22  │ 2.13.0-0.1.pre    dev<br>--------------------------------------<br>Apr 13 22  │ 2.13.0-0.1.pre<br>Apr 13 22  │ 2.13.0-0.1.pre<br>Apr 18 22  │ 2.10.5<br>Apr 20 22  │ 2.13.0-0.2.pre<br>Apr 20 22  │ 2.13.0-0.2.pre<br>Apr 27 22  │ 2.13.0-0.3.pre<br>Apr 27 22  │ 2.13.0-0.3.pre<br>May 5 22   │ 2.13.0-0.4.pre<br>May 5 22   │ 2.13.0-0.4.pre<br>May 11 22  │ 3.0.0<br>May 11 22  │ 3.0.0<br>May 20 22  │ 3.0.1<br>May 20 22  │ 3.0.1<br>May 26 22  │ 3.1.0<br>May 26 22  │ 3.1.0<br>Jun 10 22  │ 3.0.2<br>Jun 10 22  │ 3.0.2<br>Jun 15 22  │ 3.1.0-9.0.pre<br>--------------------------------------<br>Jun 15 22  │ 3.1.0-9.0.pre     beta<br>--------------------------------------<br>Jun 22 22  │ 3.0.3<br>--------------------------------------<br>Jun 22 22  │ 3.0.3             stable<br>--------------------------------------</pre><p>ผมเลือกที่จะติดตั้ง SDK เวอร์ชัน 3.0.3 (stable) และ 2.13.0–0.1.pre(dev) จะต้องพิมพ์คำสั่ง fvm use &lt;version&gt;</p><h4>ติดตั้ง Flutter SDK</h4><p>ในการติดตั้ง Flutter SDK จะใช้คำสั่ง flutter install &lt;version&gt;</p><pre>$ fvm install stable<br>$ fvm install dev<br>$ fvm install &lt;any desired version&gt;</pre><h4>เรียกดูเวอร์ชันของ Flutter</h4><p>เมื่อติดตั้งเสร็จสิ้น เราสามารถดูเวอร์ชันที่ติดตั้งด้วยการใช้คำสั่ง fvm list</p><pre>➜  ~ fvm list<br>stable<br>dev</pre><h4>เลือก Global version สำหรับ Flutter SDK</h4><p>ทำได้ด้วยการใช้คำสั่ง fvm global &lt;version&gt;</p><pre>$ fvm global stable</pre><pre>Flutter &quot;stable&quot; has been set as global</pre><pre>$ fvm list<br>stable (global)<br>dev</pre><p>สาเหตุที่จำเป็นต้องเซ็ทค่าไว้เพราะว่าถ้าเกิดเรารันคำสั่ง fvm flutter run และไม่เจอการตั้งค่าของโปรเจคในระดับ local แล้วละก็มันจะ fallback กลับมาที่ global version ครับ</p><h4>สลับเวอร์ชันในระดับ local หรือระหว่างโปรเจค</h4><p>สามารถทำได้โดยการใช้คำสั่ง fvm use &lt;version&gt;</p><pre>$ fvm use dev<br>Project now uses Flutter [dev]</pre><pre>$ fvm flutter --version<br>Flutter 3.1.0-9.0.pre • channel dev • <a href=\"https://github.com/flutter/flutter.git\">https://github.com/flutter/flutter.git</a><br>Framework • revision f28e570c8c (2 weeks ago) • 2022-06-14 13:39:33 -0500<br>Engine • revision 74ee6b5afd<br>Tools • Dart 2.18.0 (build 2.18.0-165.1.beta) • DevTools 2.14.0</pre><p>เท่านี้เราก็จะได้ Flutter เวอร์ชัน stable และ dev อยู่ในเครื่องเดียวกันเรียบร้อย ส่วนต่อไปก็เป็น</p><h4>สร้าง alias สำหรับคนขี้เกียจพิมพ์</h4><pre># aliases<br>alias f=&quot;fvm flutter&quot;<br>alias d&quot;fvm dart&quot;</pre><p>เท่านี้เราก็สามารถใช้คำสั่ง f และ d โดยไม่ต้องพิมพ์เต็มว่า fvm flutter &lt;command&gt;หรือ fvm dart &lt;command&gt; เช่น</p><pre>$ f run    # equals to fvm flutter run<br>$ d doctor # equals to fvm dart doctor</pre><p>ประโยชน์ที่ได้จากการเรียกเรียก Flutter, dart ผ่าน fvm คือ fvm จะมองหาก SDK ในแต่ละลำดับดังนี้</p><ol><li>Project</li><li>Ancestor directory</li><li>Global (Set through FVM)</li><li>Environment (Flutter version configured on PATH)</li></ol><h3>Reference</h3><ul><li><a href=\"https://fvm.app\">fvm | Flutter Version Management</a></li><li><a href=\"https://github.com/fluttertools/fvm\">GitHub - fluttertools/fvm: Flutter Version Management: A simple CLI to manage Flutter SDK versions.</a></li></ul><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=be05c6e015f0\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/scb-techx/%E0%B8%88%E0%B8%B1%E0%B8%94%E0%B8%81%E0%B8%B2%E0%B8%A3-flutter-%E0%B8%AB%E0%B8%A5%E0%B8%B2%E0%B8%A2%E0%B9%80%E0%B8%A7%E0%B8%AD%E0%B8%A3%E0%B9%8C%E0%B8%8A%E0%B8%B1%E0%B8%99%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-fvm-flutter-version-manager-be05c6e015f0\">จัดการ Flutter หลายเวอร์ชันด้วย fvm (flutter version manager)</a> was originally published in <a href=\"https://medium.com/scb-techx\">SCB TechX</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2022-08-05T02:50:28.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    },
    {
      "guid": "https://medium.com/p/427fddf22b93",
      "url": "https://medium.com/scb-techx/%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B8%88%E0%B8%B1%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A%E0%B9%81%E0%B8%99%E0%B8%A7%E0%B8%84%E0%B8%B4%E0%B8%94%E0%B8%82%E0%B8%AD%E0%B8%87-testing-library-427fddf22b93?source=rss-37b3ab8c5bd------2",
      "title": "รู้จักกับแนวคิดของ Testing Library",
      "content_html": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ArBlMJIl6CW4obFVW_3jPA.png\" /></figure><h3>Testing Library คืออะไร?</h3><blockquote>Simple and complete testing utilities that encourage good testing practices</blockquote><p>Testing Library คือ ชุดเครื่องมือในการเขียนเทสที่ครบครัน และจะช่วยให้เรามีแนวทางการเขียนเทสที่ดีขึ้น นั่นเอง</p><h3>🤔 The Problem</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*16d_0RyMoCPdzKzl\" /><figcaption>Photo by <a href=\"https://unsplash.com/@olav_ahrens\">Olav Ahrens Røtne</a></figcaption></figure><p>ปัญหาหลักที่ทางเว็บ Official ของ Testing Library ได้ยกมาเกี่ยวกับการเขียนเทสสำหรับ UI Components นั้นมีด้วยกัน 2 หัวข้อดังนี้ครับ</p><ul><li>เราเขียนเทสที่ลงในระดับของ Implementation Details เกินไปแทนที่จะโฟกัสกับการทำให้เทสที่เราเขียนนั้นสร้างความมั่นใจให้เราในแบบที่ควรจะเป็นจริง ๆ</li></ul><p>ตัวอย่างเช่น เรามี Component หนึ่ง เราเขียนเทสให้ลงไปเช็คในระดับ state ของ Component โดยในความเป็นจริงแล้ว ผู้ใช้งานไม่ได้อยากรู้ถึงขนาดว่าเราเก็บ state ชื่ออะไร สิ่งที่เขาจะสามารถเห็นได้คือ ผลลัพธ์ที่เกิดจากการแสดงผลลัพธ์บนหน้าจอ Component นั้น เป็นต้น</p><p>มีบล็อกของ Kent​ เขียนเกี่ยวกับเรื่องนี้โดยเฉพาะครับ หากใครสนใจสามารถไปอ่านต่อได้ในหัวข้อ <a href=\"https://kentcdodds.com/blog/testing-implementation-details\">Testing Implementation Details</a></p><ul><li>เราอยากจะเขียนเทสที่ง่ายต่อการบำรุงรักษา(maintainable) และในการเปลี่ยนแปลงที่เกิดจาก Implementation (เช่น การเปลี่ยนชื่อตัวแปรด้านใน Component นั้นจะไม่ส่งผลกระทบต่อความสามารถ(functionality)) จะไม่ส่งผลให้เทสนั้นพังและทำให้เราและทีมทำงานได้ช้าลง</li></ul><p>ถ้ายกตัวอย่างที่เห็นภาพได้ชัดเจน เช่น เรามี Component ที่จะแสดงผลผู้ใช้งานและเก็บ state ที่ชื่อว่า users เพื่อที่จะแสดงผล Array ของ users ออกมาบนหน้าจอ</p><p>หากวันใดวันหนึ่งเราเกิดเปลี่ยนชื่อตัวแปรที่เก็บ state ใน Component จาก users เป็น userList แต่ความสามารถยังคงเหมือนเดิมคือ การแสดงผลของ user บนหน้าจอ จะไม่ส่งผลให้เทสเคสที่เขียนนั้นพัง ซึ่งถ้าเทสของเราพัง เราอาจต้องย้อนกลับไปดูว่าเราเขียนเทสที่ผูกติดอยู่กับ Implementation details เกินไปหรือเปล่า</p><p>และก็มีบล็อกของท่าน Kent ที่เขียนในหัวข้อ <a href=\"https://kentcdodds.com/blog/write-tests\">Write tests. Not too many. Mostly integration</a> อีกเช่นกัน เผื่อใครสนใจไปตามอ่านได้ครับ อาจช่วยให้เห็นภาพได้ชัดเจนยิ่งขึ้น</p><h3>💡 The Solution</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*XrQjfADSO2DTPsDz\" /><figcaption>Photo by <a href=\"https://unsplash.com/@olav_ahrens\">Olav Ahrens Røtne</a></figcaption></figure><p>สำหรับแนวทางในการแก้ปัญหานั้นก็จะหลีกหนีไม่ได้สำหรับการใช้งาน Testing Library ของเขาครับ โดยที่จุดขายทั้งหมดจะมาแก้ปัญหาที่ได้กล่าวมาข้างต้น ไม่ว่าจะเป็นการมีแนวทางปฎิบัติที่ดีสำหรับการเขียนเทสโดยที่ไม่ Too many implementaion details พร้อมทั้งมี API interface ที่ออกแบบมาโดยที่คำนึงถึงการค้นหาสิ่งที่ผู้ใช้งานจะเห็นบนหน้าจอจริง และด้วยสองสิ่งเหล่านี้จะทำให้เรามี Test practice ที่ดีและเขียนเทสได้อย่างมั่นใจมากยิ่งขึ้นนั่นเอง</p><h3>🧐 Testing Library สามารถใช้กับ Framework/Library ไหนได้บ้าง?</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*AQlCH41Hkfiu0Iz1Ah1-fQ.png\" /></figure><p>ถ้าไปดูใน Official Website เราจะเห็นว่าใช้เทสได้เกือบทุก Frontend Frameworks/Library เลยใช่ไหมครับ ไม่ว่าตัวที่ได้รับความนิยมทั้งหลายไม่ว่าจะเป็น React, Vue, Angular, Preact, Cypress</p><p>ส่วนนี้ผมคิดว่าเราอาจจะเห็นภาพได้ชัดเจนยิ่งขึ้น เพราะไม่ว่าเราจะใช้ Tools, Frameworks, Library หรือตัวไหน ๆ สุดท้ายแล้วสิ่งที่ User เห็นก็จะอยู่บนหน้าเว็บ(DOM) เสมอ โดยที่เราไม่ต้องสนใจว่าเบื้องหลังของแต่ละเฟรมเวิร์คมีลับลมคมในอะไรอยู่ หรือมี Implementation details อย่างไรในแต่ละเฟริมเวิร์ค</p><p>ทั้งนี้หากใครสนใจลองเล่นเจ้า Testing Library เขาก็มีตัวอย่างโค้ดก็สามารถเข้าไปดูได้ที่หน้า <a href=\"https://testing-library.com/docs/recipes\">Examples</a> ได้ครับ ถ้าหากใครอยากจะลองเขียนใช้เลยโดยที่ไม่ต้องติดตั้งอะไรเพิ่มเติมก็สามารถลองเล่นได้ใน <a href=\"https://testing-library.com/docs/example-codesandbox\">CodeSandbox Example</a> ได้ทันที ขอเพียงแค่คุณมี Browser อย่างเดียวก็เกินพอ แต่ติดอย่างเดียวพวกตัวอย่างอาจมีแค่ React เป็นส่วนมาก ถ้าใครสนใจอยากจะลองใช้กับพวกโปรเจคที่ไม่ใช่ React based ก็สามารถดูเพิ่มเติมได้ที่ <a href=\"https://github.com/kentcdodds/dom-testing-library-with-anything\">dom-testing-library-with-anything</a> ที่สอนอยู่ในคอร์ส <a href=\"https://testingjavascript.com/\">Testing JavaScript</a> ครับ อาจต้องซื้อถ้าอยากดูพวกวีดีโอเนื้อหาแต่ repository ที่ใช้เป็นตัวอย่างเป็น public อยู่แล้วครับ สำหรับสายฟรีอย่างผมก็แอบไปส่องมาเหมือนกัน 👀</p><h3>สรุป</h3><p>Testing Library นั้นเป็นเครื่องมือที่น่าสนใจมากสำหรับการเขียนเทสสำหรับ UI ที่ทำให้เราเขียนเทสโดยให้เรามี Testing practice ที่ดี โดยคำนึงถึงสิ่งที่ผู้ใช้จะเห็นอยู่บนหน้าจอเป็นหลัก อีกทั้งยังสามารถนำไปปรับใช้ได้หลากหลาย Modern Frontend Frameworks/Library อย่าง React, Vue, Angular, Svelte หรือติดตั้งเป็นส่วนเสริมใน Cypress ก็ได้เช่นกัน</p><p>ก่อนหน้านี้ที่ผมใช้นั้นเจ้า Library นั้นยังไม่ได้ถูกติดตั้งโดย default ตอนสร้างโปรเจค React ด้วยซ้ำ แต่ตอนนี้มันกลายเป็น default ไปแล้ว แสดงว่าได้เจ้า Library ตัวนี้ได้พิสูจน์ตัวเอง รวมถึงแนวทางการแก้ปัญหาที่ Library นี้เสนอให้ก็เป็นที่ยอมรับโดยทั่วไปแล้วครับ</p><h4>References</h4><ul><li><a href=\"https://kentcdodds.com/blog/testing-implementation-details\">Testing Implementation Details</a></li><li><a href=\"https://testing-library.com/docs/\">Introduction | Testing Library</a></li><li><a href=\"https://kentcdodds.com/blog/write-tests\">Write tests. Not too many. Mostly integration.</a></li></ul><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=427fddf22b93\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/scb-techx/%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B8%88%E0%B8%B1%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A%E0%B9%81%E0%B8%99%E0%B8%A7%E0%B8%84%E0%B8%B4%E0%B8%94%E0%B8%82%E0%B8%AD%E0%B8%87-testing-library-427fddf22b93\">🐙 รู้จักกับแนวคิดของ Testing Library</a> was originally published in <a href=\"https://medium.com/scb-techx\">SCB TechX</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2022-07-11T08:47:01.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    },
    {
      "guid": "https://medium.com/p/521a31447f5e",
      "url": "https://medium.com/ayuth/%E0%B8%99%E0%B8%B2%E0%B8%A2%E0%B8%AD%E0%B8%B2%E0%B8%A2%E0%B8%B8%E0%B8%95%E0%B8%A1%E0%B9%8C-%E0%B8%A1%E0%B8%B1%E0%B9%88%E0%B8%87%E0%B8%A1%E0%B8%B5%E0%B8%97%E0%B8%A3%E0%B8%B1%E0%B8%9E%E0%B8%A2%E0%B9%8C-%E0%B8%99%E0%B8%B1%E0%B8%81%E0%B8%A8%E0%B8%B6%E0%B8%81%E0%B8%A9%E0%B8%B2%E0%B9%81%E0%B8%A5%E0%B8%81%E0%B9%80%E0%B8%9B%E0%B8%A5%E0%B8%B5%E0%B9%88%E0%B8%A2%E0%B8%99-outbound-%E0%B8%97%E0%B8%B5%E0%B9%88-national-institute-of-advanced-industrial-521a31447f5e?source=rss-37b3ab8c5bd------2",
      "title": "ประสบการณ์แลกเปลี่ยนที่ National Institute of Advanced Industrial Science and Technology (AIST)…",
      "content_html": "<h3>ประสบการณ์แลกเปลี่ยนที่ National Institute of Advanced Industrial Science and Technology (AIST) ที่ประเทศญี่ปุ่น</h3><p>บทความนี้กะจะเอาไปลงในเว็บมหาลัยครับแต่ด้วยความที่กลัวมันจะหายไปจึงตัดสินใจว่าใส่ไว้ใน Medium ดีกว่าและให้ทางมหาลัยลิงค์มาที่นี่ ฉะนั้นหัวข้อก็จะแบบดูเป็นนักศึกษาที่ดีนิดหนึ่งรวมถึงภาษาด้วย ฮ่า ๆ เอาละไปอ่านกันเลยครับ</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/876/1*0nwY4SEqNfiyiYEY0rpPLg.png\" /><figcaption>Photo by <a href=\"https://unsplash.com/@ajny\">@ajny</a></figcaption></figure><p>ในช่วงประมาณปี 4 ผมได้มีโอกาสไปแลกเปลี่ยนที่ประเทศญี่ปุ่นที่สถาบันวิจัย National Institute of Advanced Industrial Science and Technology หรือเรียกสั้น ๆ ว่า AIST ณ ประเทศญี่ปุ่น</p><p>ขอเกริ่นก่อนว่าบล็อกนี้ดองจนได้ที่นับตั้งแต่อาจารย์ทักมาบอกว่าอยากให้ช่วยเขียนแชร์ประสบการณ์ให้หน่อย ฉะนั้นข้อมูลของการขอพวก VISA หรือขั้นตอนต่าง ๆ อาจจะไม่ได้อัพเดทล่าสุดนะครับ ทางที่ดีเราควรจะติดต่อถามทางกงสุลญี่ปุ่นให้แน่ใจว่าต้องใช้เอกสารอะไรบ้างจะชัวร์ที่สุด</p><p>บล็อกนี้จะแชร์ถึงการไปแลกเปลี่ยนที่ AIST และแชร์ประสบการณ์ของการไปใช้ชีวิตอยู่ที่ต่างแดนตลอด 2 เดือน ไม่ว่าจะเป็น การเตรียมตัวในการเดินทาง การใช้ชีวิตประจำวัน สถานที่ที่ควรจะไปเมื่ออยู่ Tsukuba หรือแม้แต่ทริปการปั่นจักรยานขึ้นเขา Mount Tsukuba ที่ทรหดประชดชีวิตมาก</p><h3>🙉 ไปได้อย่างไร?</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*s2onSaA1pdC9EdCSWRn-9Q.png\" /><figcaption>Photo by <a href=\"https://unsplash.com/@dimhou\">Dim Hou</a></figcaption></figure><p>ทางมหาวิทยาลัยธรรมศาสตร์และสถาบัน AIST ที่ญี่ปุ่นได้มีการเซ็น MOU ที่มีข้อตกลงที่จะแลกเปลี่ยน ร่วมมือกันในการพัฒนางานวิจัยและศึกษาในหลากหลายด้านที่เกี่ยวข้อง ไม่ว่าจะเป็น Artificial Intelligence (AI), Data Science ที่เกี่ยวข้องกับ AI, System/Infrastructure, Human-Computer Interaction และ Internet of Things (IoT) ซึ่งแน่นอนว่าการไปแลกเปลี่ยนครั้งนี้อยู่ในข้อตกลงนี้ด้วยเช่นกัน</p><p>ทางผมก็เพิ่งทราบเหมือนกันว่ามีโปรแกรมที่จะแลกเปลี่ยนรวมถึงข้อตกลงนี้อยู่ด้วยเพราะตอนนั้นทาง Jason ได้บินมาสัมนาที่มหาวิทยาลัยและช่วงสุดท้ายหลังจากพูดจบก็มีกล่าวถึงโปรแกรมนี้ เราก็เลยสนใจพอดีพร้อมกับอาจารย์ที่ปรึกษาของเรากำลังหานักศึกษาสมัครโปรแกรมนี้อยู่เช่นกัน</p><p>สำหรับพวกข้อกำหนดขั้นต่ำในการสมัครก็จะต้องการเรื่องทั่วไปไม่ว่าจะเป็น Transcript และ CV เพื่อที่จะให้มั่นใจว่าเราไม่ติดอะไร และสามารถให้ความร่วมมือในโปรแรกมนี้ได้อย่างเต็มที่ ช่วงแรกที่ลองสมัครไปก็กระอักกระอ่วนนิดหนึ่งเพราะเกรดเราก็อยู่กลาง ๆ ไม่ได้ดีและแย่เท่าไร สกิลภาษาก็งูงูปลาปลา ฟังได้แต่เวลาจะพูดก็ต้องนึกคำ ตอนนั้นทำให้รู้ทันทีเลยว่าเรื่องเกรดที่ดีมีส่วนสำคัญไม่แพ้กันในการที่นำเราไปสมัครโปรแกรมจำพวกนี้หรือขอทุนต่าง ๆ อันที่จริงตอนนั้นไม่ค่อยได้สนใจเกรดเท่าไรนักแค่รู้สึกสนุกกับสิ่งที่อยากเรียนก็น่าจะเพียงพอ ต้องขอบคุณอาจารย์ที่ปรึกษาช่วยเข็นและเชื่อมั่นในความสามารถของเราและลองคุยดูให้</p><p>เมื่อทางเขาพิจารณาเสร็จเรียบร้อย ผ่านเกณฑ์ ตกลงเรื่องสโคปของงาน และเรื่องที่เราต้องทำเสร็จเรียบร้อย เราต้องทำอะไรเรียบร้อย เราก็จะไปสู่หัวข้อถัดไปนั่นคือ การเตรียมตัวการเดินทาง</p><h3>✈️ การเตรียมตัวสำหรับการเดินทาง</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/0*65Uyw3N0vVGdSi7g\" /><figcaption>Photo by <a href=\"https://unsplash.com/@anniespratt\">@anniespratt</a></figcaption></figure><p>สำหรับการเตรียมตัวสำหรับการเดินทางจะประกอบด้วยกัน 2 ส่วนคือ</p><ol><li>📄 เอกสาร</li><li>🧸 สิ่งของที่ควรจะเตรียม</li></ol><h4>📄 เอกสาร</h4><p>ระยะเวลาของการแลกเปลี่ยนคือ 2 เดือนเพราะฉะนั้นเราจำเป็นที่จะต้องทำ Passport ให้เรียบร้อยและขอวีซ่าไว้ ให้ครอบคลุมสำหรับช่วงเวลาที่จะไปซึ่งผมคงจะไม่ลงรายละเอียดกันเพราะเชื่อว่าทุกท่านคงจะสามารถหากันได้เองและข้อมูลที่เขียนไปอาจไม่ได้อัพเดทอย่างสม่ำเสมอหรืออาจจะเปลี่ยนไปได้ในอนาคต ดังนั้นทางที่ดีที่สุดคือโทรไปสอบถามทาง <a href=\"https://www.th.emb-japan.go.jp/itprtop_th/index.html\">สถานเอกอัครราชทูตญี่ปุ่นประจำประเทศไทย</a> ว่าต้องการเอกสารอะไรบ้าง</p><p>เอกสารที่นอกเหนือจาก Passport และ Visa เราคุยกันผ่านทางอีเมล์กับ Tasaki-san ซึ่งเป็นผู้ช่วยในการจัดการเรื่องเอกสารว่าเราควรเตรียมอะไรไปบ้างและเอกสารที่ทาง AIST ส่งมาให้เพื่อที่จะให้เรานำไปยื่นตอนเข้าเข้าประเทศญี่ปุ่น</p><p>Tasaki-san เรียกได้ว่าเป็นคนคอยประสานงานพวกงานเอกสารเพื่อให้เราเข้ามายังญี่ปุ่นได้อย่างราบรื่น เช่น Visa Application Form สำหรับเข้าประเทศญี่ปุ่นมาให้เรากรอกพร้อมใส่รายละเอียดทั้งหลาย ไม่ว่าจะเป็นคนที่เราเชิญเข้าไปคือใคร เราจะเข้าไปที่ไหน มีความสัมพันธ์กับ ตำแหน่งอะไร เป็นต้น รายละเอียดพวกนี้ก็จะถูกกรอกมาในฟอร์มมาก่อนแล้วทำให้เรากรอกแค่รายละเอียดเฉพาะสำหรับตัวเรา และพวกเอกสารที่ต้องส่งมาจากญี่ปุ่นพร้อมตราประทับเพื่อให้เราเตรียมไปยื่นตอนเข้าประเทศ ตั๋วเครื่องบิน ฯลฯ บอกเลยว่าถ้าไม่ได้ Tasaki-san ช่วยประสานงานให้คือจบตั้งแต่ยังไม่ได้เดินทางไปแน่นอน ซึ่งเอกสารหลักที่พอจะจำได้คือ</p><ol><li>Passport พร้อมวีซ่าเข้าประเทศ</li><li>เอกสารรับรองทั้งหลายจากทาง AIST ที่ Tasaki-san เตรียมมาให้ไม่ว่าจะเป็น เราเข้าไปทำอะไร ที่ไหน ตำแหน่งอะไร ทำอะไร เป็นต้น</li><li>เอกสารการทำประกันการเดินทางไปต่างประเทศในระยะเวลาที่ครอบคลุมตลอด 2 เดือนที่อยู่และครอบคลุมถึงประเทศญี่ปุ่น</li></ol><p>ในการแลกเปลี่ยนครั้งนี้ทาง AIST จะออกค่าตั๋วเครื่องบิน ไป — กลับ พร้อมค่าที่พัก แต่ค่าที่พักเราจำเป็นจะต้องสำรองจ่ายล่วงหน้าไปก่อนจากนั้นทาง AIST จะโอนกลับคืนมาที่บัญชีเราพร้อมกับภาษีอันแสนจะโหดร้าย 20.5% tax 😭 (ถ้าใครไปแนะนำให้เตรียมเงินจ่ายเงินค่าที่พักล่วงหน้าไปเลยและเอาใบเสร็จไปเบิกค่าที่พักเพราะกระบวนการนี้ค่อนข้างจะใช้เวลานิดนึง)</p><h4>🧸 สิ่งของที่ควรจะเตรียม</h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*MMsqVk9dT0j7Inz_\" /><figcaption>Photo by <a href=\"https://unsplash.com/@anniespratt\">@anniespratt</a></figcaption></figure><p>นอกเหนือจากเอกสารต่าง ๆ ที่ต้องเตรียมไปอย่างแน่นอนก็มีอีกสิ่งของสำคัญไม่แพ้กัน เช่น เสื้อผ้าเราก็ต้องเตรียมให้เหมาะสภาพอากาศ ณ ขณะนั้น ในตอนที่ผมไปจะเป็นฤดูปลายหนาวอุณภูมิจะอยู่ที่ประมาณ 0 องศาเซลเซียส ก็ต้องเตรียมเสื้อกันหนาวที่กันหนาวได้ในอุณหภูมิ ณ ขณะนั้น ยารักษาโรคกรณีฉุกเฉิน</p><h4><strong>สิ่งที่ควรจะเตรียมไปอย่างยิ่ง</strong></h4><p>สิ่งของที่ต้องเตรียมไปมิเช่นนั้นชีวิตท่านอาจจะติดขัด</p><ul><li>💰 เงินสด — ขาดไม่ได้อย่างแน่นอนเพราะบางทีทานข้าว ไปร้านอาหารที่ไม่ได้รับบัตรเราจำเป็นจะต้องมีจ่ายเงินสด</li><li>💳 บัตร Debit, Credit หรือบัตรที่แลกเงินต่างประเทศเผื่อไว้ — เพราะร้านสะดวกซื้อสามารถใช้บัตรจ่ายแทนเงินสดได้</li><li>👕 เสื้อผ้าที่เหมาะแก่สภาพอากาศ ณ ขณะนั้น — หรืออาจไปซื้อหน้างานก็ได้แต่เตรียมไปจะอุ่นใจที่สุด</li><li>💊 ยา — รักษาโรคประจำตัว หรือลองถามเภสัชที่ร้านยาก็ได้ว่าควรจะเตรียมยาประเภทอะไรไปเพราะบางทีได้อ่านผ่านตาว่าร้านยาในต่างประเทศจำเป็นที่จะต้องมีใบสั่งแพทย์มาก่อนมิฉะนั้นจะซื้อไม่ได้ นั่นคือถ้าอยู่ดี ๆ เป็นอะไรขึ้นมาเดินดุ่มดุ่มไปซื้อไม่ได้สะดวกเหมือนไทยแน่นอน</li><li>👓 แว่นสำรอง → ไม่กี่วันหลังจากนอนทับแว่นจนเลนส์หลุดใส่ไม่ได้ก็ได้ใช้เลย</li><li>🌏 ซิมอินเทอร์เน็ต — สิ่งนี้ควรเตรียมไปจากไทยเพราะถ้าซื้อจากที่สนามบินหรือพวกร้านค้าทั่วไปก็ราคาก็จะพอกันแต่ในราคาไทยจะได้เน็ต Unlimited หรืออาจถูกกว่าด้วยซ้ำ</li><li>💻 อุปกรณ์ต่อพ่วงคอมพิวเตอร์ → ที่พักไม่มี WiFi ในห้องให้แต่มีสาย Ethernet ให้ต่อเข้าคอม ถ้าใครใช้พวก MacBook อย่าลืมเตรียม Ethernet Adapter ไปด้วยนะครับมิเช่นนั้นท่านอาจจะต้องหิ้วคอมหรือโทรศัพท์มือถือไปใช้ WiFi ที่ Lobby กลาง</li><li>🍜 อาหารกันตาย → ผมเตรียมมาม่าไปหลายห่ออยู่เผื่อเป็นอาหารสำรอง ซึ่งวันแรกก็บด ๆ กินวันแรกจากนั้นก็ค้นพบว่ากินมาม่าไทยไปทำไมเราอยู่ญี่ปุ่นเลยแจกคนในแลปเลย(ฮา)</li></ul><h4><strong>สิ่งที่สามารถหาซื้อได้ทั่วไป</strong></h4><p>ของใช้ที่สามารถหาซื้อได้ตามร้านสะดวกซื้อทั่วไปไม่ต้องเตรียมไปให้หนักกระเป๋า เช่น</p><ul><li>🧴 สบู่อาบน้ำ ยาสระผม ครีม → ความจริงที่พักจะมีให้อยู่แล้วแหละไม่ต้องเตรียมไปก็ได้</li><li>🧼 ผงซักฟอก (detergents) → ที่พักมีเครื่องซักผ้าให้แต่ไม่มีพวกผงซักฟอก</li></ul><p>ความจริงแล้วมีพี่ท่านหนึ่งที่เดินทางไปอยู่หลายประเทศเป็นเวลานาน ๆ แนะนำมาว่าให้ไปซื้อของพวกนี้เอาตามหน้างานก็ได้ถือว่าเปลี่ยนบรรยากาศจะได้ไม่ต้องแบกของไปให้หนักกระเป๋า ซึ่งตอนแรกก็ไม่เชื่อหลังจากนั้นพออยู่ไปสักพักก็สังเกตเห็นว่าเจ้าพวกนี้ราคาก็พอกับที่เราซื้อที่ไทยและแบกไปเลย แถมบางตัวที่ญี่ปุ่นมีที่เหมาะกับสภาพอากาศของบ้านเขาด้วยด้วย เช่น กัน UV หรืออะไรก็ว่ากันไป 😂</p><h3>🚌 จากสนามบิน Narita สู่ AIST</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*4DJ5MnABaLvrv5g9\" /><figcaption>ภาพถ่ายจากสนามบิน Narita ถ่ายตอนลงจากเครื่อง อากาศคือหนาวมากกกกก</figcaption></figure><p>การเดินทางจากสนามบินดอนเมืองไป Narita Airport ประเทศญี่ปุ่นจะใช้เวลาประมาณ 6–7 ชั่วโมง เมื่อถึงสนามบินและก้าวออกจากเครื่องบินเวลาย่ำรุ่งเราก็สัมผัสได้ถึงความหนาวเหน็บระดับ 0 องศาครั้งแรกในชีวิต นับว่าโชคดีมากที่ใส่เสื้อกันหนาวและผ้าพันคอมาเผื่อก่อนบินออกจากสนามบินดอนเมือง</p><p>เมื่อถึง Narita Airport ก็จะมีด่านตรวจคนเข้าเมือง การเข้าไปก็จะมีเจ้าหน้าที่คนนึงคอยตรวจเอกสารของเราและจุดนี้เองก็คิดถึงอานิสงส์ของ Tasaki-san ☺️ ที่ทำให้เราผ่านเข้าเมืองไปได้อย่างราบรื่นมาก ตม. ถามประมาณว่า ไปทำอะไร อยู่กี่วัน มีเอกสารรับรองไหม คำถามเราก็ตอบไปแล้วก็ยื่นเอกสารที่เตรียมมาซึ่งเขาใช้เวลาอ่านสักพักแล้วเราก็ไปแล้วก็ผ่านฉลุย เย้!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*HbFjqDNOaOWmhaot\" /><figcaption>ระหว่างอยู่ที่ Narita Airport ก็เอาแต่ถ่ายรูปตัว Mockup ขนมที่สนามบินเพราะมันสวยชนิดทีว่าอยากจะทุบกระจกหยิบขึ้นมากินเลยทีเดียว</figcaption></figure><p>ก่อนจะเล่าการเดินทางออกไปยังจุดนัดหมาย ขอแนะนำตัวละครก่อนสักนิดหนึ่ง คนที่คอยดูแลเราตอนอยู่ที่ญี่ปุ่นจะเป็น Senior Researcher ที่ชื่อ Jason ที่จะคอยให้คำปรึกษาโปรเจค คอยแนะนำว่าไปเที่ยวที่ไหนดี ทำตัวอย่างไร วัฒนธรรมที่นี่เป็นอย่างไร</p><p>Jason เป็นคนเชื้อสายญี่ปุ่นแต่อยู่อเมริกาแล้วกลับมาอยู่ญี่ปุ่นและทำหน้าที่คอยให้คำปรึกษาร่วมกับโปรเจคของเราโดยที่เรามี อ. ประภาพร(นุ่น) เป็นที่ปรึกษาหลักอยู่ที่ไทย ซึ่งเราจะมี Video Conference กันประมาณ 2 อาทิตย์ครั้งหรือไม่ก็เดือนละครั้งแล้วแต่สถานการณ์และความคืบหน้าของโปรเจค ณ ขณะนั้นแต่ถ้างานเร่งมากไฟลนก้นเราก็จะคุยอาทิตย์ละครั้ง แต่ความจริงแล้วเราไม่ได้มีแค่ Jason เรามีทั้ง Shava และ Nadya ที่คอยเป็นที่ปรึกษาร่วมที่คอยให้คำปรึกษาอยู่เช่นกันพร้อมช่วยเหลือตลอด เช่น จัดเตรียม Infrastructure หรือสิ่งทั้งหลายทั้งมวลที่เราไม่สามารถจัดเตรียมเองได้ เมื่อแนะนำตัวละครเสร็จเรียบร้อยก็ถึงเวลาจากสนามบิน Narita ไปที่ <a href=\"https://www.google.co.jp/maps/place/Tsukuba+Center,+AIST:+National+Institute+of+Advanced+Industrial+Science+and+Technology/@36.1244959,140.0590745,13z/data=!4m13!1m7!3m6!1s0x60220bebeb830b69:0x6a50beac31c4b783!2sTsukuba,+Ibaraki,+Japan!3b1!8m2!3d36.0834857!4d140.0766423!3m4!1s0x60220cc567b824f5:0xecc14922713a4044!8m2!3d36.062425!4d140.1356751\">Tsukuba Center</a> ซึ่งเป็นจุดนัดพบของเรา</p><p>ที่สนามบินจะมีให้เราซื้อตั๋วรถไป Tsukuba Center อยู่แล้ว ขอเพียงเราไปจ่ายเงินให้ถูกช่องก็จะได้ตั๋วมาและไปรอขึ้นตรงจุดที่กำหนดไว้ให้ตรงเวลา สำคัญมากนะครับต้อง “ตรงเวลา” เพราะวันแรกผมก็เกือบหายนะบังเกิดเพราะเรื่องเวลานี่แหละ</p><p>เราคงเคยได้ยินว่าประเทศญี่ปุ่นขึ้นชื่อเรื่องความตรงต่อเวลามาก จำได้ว่าวันแรกที่ผมซื้อตั๋วเสร็จ เดินเล่น ถ่ายรูปเล่น เพื่อจะรอเวลาขึ้นรถคิดว่าจะเหมือนรถเมล์ไทยที่สายได้ เลทนิดหน่อยก็คงไม่เป็นไร แต่ความเป็นจริงแล้วไม่ใช่อย่างนั้น</p><p>เราซื้อตั๋วและนัดเอาไว้ตอน 8:00 น. เราควรจะไปเตรียมรอที่ป้ายที่ระบุไว้ในตั๋วรถเมล์ก่อนจะถึงเวลาเพราะ 8 โมงตรงคือรถจะออกจากป้ายทันทีโดยที่ไม่รอใครทั้งสิ้น! จำได้ว่าตอนนั้นเกือบตกรถแล้ว 😭 แต่ด้วยบุญเก่าที่ทำมาทำให้เราไม่ได้ตกรถตั้งแต่วันแรก พอเรารีบวิ่งไปที่ป้ายที่รอก็เจอรถที่จะขึ้นพอดีพร้อมกับเจอกระเป๋าทำท่าหงุดหงิดชนิดที่ว่านี่มันกี่โมงกี่ยามแล้วไม่ดูเวลาเลย(พูดเป็นญี่ปุ่นนะเราฟังไม่ออกหรอกแต่สัมผัสได้) แต่เขาก็ยกกระเป๋าให้ นับตั้งแต่วันนั้นก็ไม่ขึ้นรถสายอีกเลย 🤒</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*khm7LmRpn6FRQemv\" /><figcaption>วิวจุดรอ Jason ที่ Tsukuba Center</figcaption></figure><p>เมื่อถึง Tsukuba Center เราอีเมล์ไปบอก Jason ที่เป็น Advisor ของเราว่าถึงแล้ว เขาก็จะมาในบัดดลก็ได้ทักทายจับมือเซย์ฮัลโหลกันตามประสาคนเพิ่งเจอกัน มีคำถามนู่นนั่นนี่มากมาย</p><p>จะบอกว่าเวลาติดต่อกันว่าถึงจุดนัดพบแล้วไม่ได้มีเบอร์ติดต่อนะ ใช้อีเมล์ติดต่อเอา พอเมล์ไปปั๊บเขามาเร็วมาเราก็ถามว่าทำไม อ๋อ! เพราะป้ายรอรถที่ AIST มีรถรับ-ส่งจาก AIST มาที่ Taukuba Center ซึ่งตอนจะกลับไปที่สนามบินก็ต้องขึ้นที่ป้ายนี้และเดินทางไปต่อรถไปสู่สนามบิน Narita ที่ Tsukuba Center</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*u_slP-JJtZiVpUdv\" /><figcaption>เจอ Jason แล้วก็ถ่ายรูปไปให้อาจารย์ที่ปรึกษาอุ่นใจหน่อยว่าถึงแล้ว 555 คนที่อยู่ในรูปด้านขวาคือเคนที่เป็นคู่โปรเจคชื่อ เคน</figcaption></figure><p>จากนั้นพอถึงป้ายลงรถ เราก็ลากกระเป๋าไปในที่ทำงานใน AIST ไปถ่ายรูปทำบัตรเข้าตึกและพูดคุยกันแนะนำให้คนที่แผนกรู้จัก พาไปเดินทัวร์แผนกว่ามีใครบ้างชื่ออะไร อ่านเอกสารและข้อตกลงเป็นหลายสิบหน้า ตั้งค่าอะไรบ้างในคอมหรือให้เข้าอะไรบ้างต่อมิอะไรก็จำไม่ได้ละ เราก็ได้แต่นั่งอ่านทำไปตามหน้าที่ ถ่ายรูปทำบัตรเข้าพนักงานเข้าตึกอะไรก็ว่าไป กว่ากระบวนการทั้งหมดจะจบก็ใช้เวลาทั้งวันเหมือนกัน</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1008/0*iQ7hk6W56AocOr02\" /><figcaption>บัตรผ่านเข้าชั้น</figcaption></figure><p>หลังจากผ่านมรสุมการ onboarding และเสร็จสิ้นกระบวนการทุกอย่าง ตอนเย็น Jason ก็พาเราเดินไปที่พักครับเพื่อเช็คอินและพักผ่อนเตรียมพร้อมสำหรับในวันพรุ่งนี้</p><p>ระหว่างเดินทางกลับขอบอกว่าบรรยากาศดีมาก ลมเย็นเย็นระดับ 0 องศา เสียงนกร้องจากมุมไกล อากาศบริสุทธิ์ชนิดที่สูดหายใจแล้วสดชื่นไปยังขั้วปอดซ้ายขวา ❄️😊</p><h3>🌺 ที่พัก Sakura-Kan</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*t9YNzvENyBODJAaq\" /><figcaption>วิวจากหน้าต่างห้องนอน ณ วันที่หิมะตก ❄️</figcaption></figure><p>หลังจากที่ทำบัตรเข้าที่ทำงาน และทำเอกสารต่าง ๆ เรียบร้อย ตอนเย็น Jason ก็พาเราเดินไปที่พัก ในระหว่างทางที่เดินรู้สึกฟินมากเพราะมีแม่น้ำ ต้นไม้ และลมเย็นสดชื่นปะทะผิวหน้าและทั่วทั้งร่างกายในยามเย็น เอาละมาดูในที่พักดีกว่าว่าจะมีอะไรบ้าง</p><ul><li>🛏 ห้องนอน → ในห้องนอนจะมี เตียงนอน TV โต๊ะทำงาน โคมไฟ โทรศัพท์ ตู้เย็น แก้ว เครื่องต้มน้ำ ที่เป่าผม ราวตากผ้า ไม้แขวนเสื้อ ผ้าขนหนู ผ้าเช็ดหน้า เสื้อคลุมอาบน้ำของญี่ปุ่น(ญี่ปุ๊นญี่ปุ่น เหมือนในหนังเลย), สบู่ ผ้าปูที่นอน ปลอกหมอน ห้องน้ำส่วนที่มีเครื่องทำน้ำอุ่นพร้อมอ่างที่เราสามารถลงไปแช่ได้ ที่สำคัญที่สุดในห้องมีชักโครกแบบโครตจะไฮเทค</li><li>🔪 ครัวรวม → จะเป็นครัวที่ถ้าใครต้องการใช้เราจะต้องไปขอทำเรื่องยืมอุปกรณ์ที่ Reception โดยจะมีพวกอุปกรณ์พื้นฐานไม่ว่าจะเป็น จาน ชาม มีดทำครัว มีด เขียง หม้อ กระทะ อย่างอื่นลืมหมดแล้วแต่เรียกได้ว่าครบครันสำหรับการทำอาหารกินเองเพื่อประทังชีวิต หม้อหุงข้าวก็มี</li><li>🚬 ห้องสูบบุหรี่ → ทางที่พักเขามีห้องให้สำหรับสิงห์นักสูบโดยเฉพาะ</li><li>❌ สิ่งของที่โรงแรมไม่ได้จัดเตรียมไว้ให้ → กระดาษทิชชู่ และ น้ำยาซักผ้า เราต้องเตรียมไปเองแต่พวกน้ำยาซักผ้าไปหาซื้อใน 7–11 ที่ญี่ปุ่นก็ได้ครับกลิ่นหอมดี</li><li>🛋 ของส่วนกลาง → ไมโครเวฟ เครื่องซักผ้า(แต่ไม่มีผงซักฟอกให้เราต้องเตรียมไปเอง ถ้าให้แนะนำคือไม่ต้องหิ้วมาจากไทยครับหาซื้อเอาในร้านสะดวกซื้อที่ญี่ปุ่นดีกว่าราคาเท่ากันแถมยังได้กลิ่นญี่ปุ๊นญี่ปุ่นด้วย)</li><li>🌂 ของที่สามารถยืมได้ → จักรยาน(จะไปไหนก็ปั่นจักรยานนี่แหละยืมได้ที่ Reception)</li></ul><p>ขอเล่าเรื่องราวสั้น ๆ สำหรับความประทับใจของชักโครกในห้องนิดนึงครับ ในฤดูหนาวมันจะค่อนข้างหนาวมาก หนาวชนิดที่ห่มผ้าก็ยังเอาไม่อยู่ คราวนี้หายนะจะบังเกิดขึ้นทันทีถ้าคุณไปเข้าห้องน้ำคือฝารองมันจะมีความอบอุ่นมากชนิดที่เราขอบคุณคุณคนออกแบบผลิตภัณฑ์ว่าทำไมเขาช่างใส่ใจในรายละเอียดแบบนี้ TT</p><h3>🤺 การใช้ชีวิตประจำวัน</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*xqrvI5FrEDzsyWwV\" /><figcaption>ภาพด้านข้างตึกที่ทำงาน บรรยากาศสวยมาก อากาศดีมากกก</figcaption></figure><p>เคยสงสัยกันไหมว่าแต่ละวันเราทำอะไรกันบ้าง ในหัวข้อนี้จะมาเล่าชีวิตประจำวันครับตั้งแต่ตื่นนอน เดินทางไปทำงาน ตกเย็นไปร่อนที่ไหน เสาร์อาทิตย์ไปทำอะไรบ้าง</p><h4>👨‍💻 เดินทางไปทำงาน</h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*tKrz6dc8ReOtS9zo\" /><figcaption>ที่จอดจักรยานด้านข้างตึกที่ทำงาน ที่จอดจักรยานจะเป็นงานมากสังเกตเห็นว่ามันลอยจากพื้นและสามารถเลื่อนได้ด้วย จักรยานสีฟ้าก็จะเป็นจักรยานที่ยืมมาจากที่ Sakura-Kan</figcaption></figure><p>ทาง Jason และคนในแลปของเราค่อนข้างจะยืดหยุ่นเรื่องเวลาเข้า-ออกครับจะไม่ได้เคร่งชนิดที่ตรงเวลาเป๊ะต้องมานั่งที่โต๊ะนั่งทำอะไรต่อมิอะไรไป เช่น ไปกินข้าวเที่ยงก็ไม่ต้องไปตรงเวลา รอไปตอนที่คนไม่เยอะแล้วไปทานพร้อมกันครับ ส่วนนี้ถือเป็นเรื่องที่โชคดีงามมากจริง ๆ</p><p>สำหรับเวลาเข้า-ออกก็ประมาณ 9:00–17:00 ครับ อาจจะเร็วหรือช้ากว่านั้นได้ไม่มีปัญหา โดยการเดินทางไปในตึกที่ทำงานมี 2 วิธีครับ</p><ul><li>🚶‍♂️ เดิน → ใช้เวลาประมาณ 10–15 นาที แล้วแต่ความรีบร้อน</li><li>🚲 ปั่นจักรยาน → ใช้เวลาประมาณ 5–10 นาที แล้วแต่ความรีบร้อนอีกเช่นกัน โดยในเวลาที่ค่อนข้างจะรีบร้อนสุดสุดผมปั่นไปประมาณ 5 นาทีกว่า ๆ (ฮา)</li></ul><p>สำหรับการจอดจักรยานนั้นที่ข้างตึกขามีที่จอดสำหรับจักรยานให้โดยเฉพาะครับ และความน่ารักอย่างหนึ่งของที่ญี่ปุ่นคือไม่ว่าคุณจะไปที่ไหนก็ตาม เช่น ห้างสรรพสินค้า ร้านสะดวกซื้อก็จะมีที่ช่องเล็ก ๆ สำหรับจักรยานเสมอ 😊</p><h3>⌛️👨‍💻 ช่วงเวลาการทำงาน</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*hoDSdXmejVqW4N_f\" /><figcaption>วิวตรงทางเดินเห็นในแลป เห็นภูเขาด้วย 🏔</figcaption></figure><p>วันแรกของการทำงาน Jason ก็ได้พาเราไปแนะนำตัวให้รู้จักคนในแผนก ซึ่งเราก็จะได้แนะนำตัวและรู้จักทุกคนทั่วทั้งชั้นเลย อีกความประทับใจคือเราจะได้พบ Tasaki-san ที่ช่วยเตรียมทุกอย่างให้เราเดินทางถึงที่หมายได้อย่างราบรื่นและปลอดภัย</p><p>ที่แลปของเราจะค่อนข้างยืดหยุ่นเรื่องเวลา การเข้ามาส่วนมากจะมาตั้งแต่ 9:00 และออกประมาณ 18:00 เป๊ะ แต่ Tasaki-san เขาจะมาตรงเวลาและกลับตรงเวลามาก ถ้าต้องความช่วยเหลือก็จะมาในเวลาคนปกติมา แต่ถ้าเย็นเกินไปเขาก็จะกลับบ้านแล้ว</p><p>ส่วนของการทำงานก็ทำตามสโคปและแพลนที่ได้ตกลงกันไว้ถ้าติดปัญหาตรงไหนก็สามารถถามได้ทันที มีทรัพยากรให้พร้อมตลอดครับ เราก็มาคุยกันว่าเราจะทำอะไร แก้ปัญหานี้ยังไง ออกแบบการทดลองอย่างไรดี ผลลัพธ์ที่ได้สามารถเอาไป conference หรือตีพิมพ์ต่อไปเป็น paper ได้ไหม เรียกได้ว่าค่อนข้างท้าทายครับ เราได้ Jason มาช่วยแนะนำให้ว่า ไปทางไหน ควรทำอย่างไร เก็บข้อมูลอะไร และเอาข้อมูลที่ได้ไปวิเคราะห์อย่างไร เพราะทาง Jason เขาค่อนข้างมืออาชีพทางด้านนี้ครับ</p><p>เวลาบ่ายแก่ ๆ นานน๊านทีจะมีเพื่อนจากเกาหลีที่อยู่ Lab ข้าง ๆ 2 คนชื่อ Han กับ Yeon มาเม้าท์มอยเล่นกันตามประสาวัยวัยรุ่นที่มาเที่ยวต่างเมือง บ้างก็มาโม้ว่าไปที่ไหนมาบ้าง สถานที่ที่แนะนำมีมั้ย มีจัดทริปไปลุยในเมืองด้วยกันด้วยแต่ยอนไม่ไปเพราะแฟนบินมาจากเกาหลี 🤣</p><p>มาดูในส่วนถัดไปจะเป็นส่วนของโปรเจคที่ได้ไปช่วย Jason ทำครับ</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*uQzjI7BmnbpavpHV\" /><figcaption>Source: Immersive Visualisation of Big Data for River Disaster Management</figcaption></figure><p>ผมได้ไปช่วยโปรเจคของ Jason บ้าง 1–2 โปรเจคครับ อย่างตัวแรก เป็นโปรเจคที่เอาข้อมูลที่เก็บจากเซ็นเซอร์ที่เก็บข้อมูลสภาพอากาศทั่วญี่ปุ่น จากนั้นนำข้อมูลเหล่านั้นมาคลีนและ Visualize ในรูปแบบของ VR ทำให้เราสามารถเข้าไปดูข้อมูลได้แบบ Immersive อย่างกับว่าเล่นเกมส์อยู่ โดยที่เราจะต้องสวมแว่นตาและถือที่ควบคุมไว้เพื่อชี้ดูข้อมูลต่าง ๆ หรือแม้แต่การย้อนกลับไป ณ วันที่ใด ๆ ก็ได้ คือมันคูลมาก ถ้าใครสนใจสามารถไปอ่านต่อได้ในเปเปอร์ที่ชื่อ Immersive Visualisation of Big Data for River Disaster Management ครับ</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/0*cpenGAmV6OuRRo6K\" /><figcaption>Source: <a href=\"https://sage2.sagecommons.org/project/introduction/\">https://sage2.sagecommons.org/project/introduction/</a></figcaption></figure><p>อีกโปรเจคหนึ่งที่จะคือเขียน extension ไปต่อกับ SAGE2 ที่สามารถทำให้เรา Visualised ข้อมูลที่เก็บมาจาก Real-time Database และพล็อตเป็นกราฟได้เพื่อที่ในอนาคตเราสามารถที่จะดึงข้อมูลและให้ Visualised บนจอขนาดใหญ่บิ๊กเบิ้มแบบ Real-time ได้ โดยเราจะใช้ติดตามพวกภัยพิบัติที่เกิดขึ้นได้ในญี่ปุ่นแบบ Real-time บอกได้ว่าท้าทายอยู่ครับทั้งในแง่ของการเก็บข้อมูล การดึงข้อมูลและแสดงผลบน Platform ที่ไม่คุ้นและมี Documentation มากเท่าไร มีแต่เพียงโค้ดคนที่ทำโปรเจคก่อนหน้าทำไว้ก่อนและใช้ได้ จากนั้นก็เอามาแกะและเขียนใหม่ขึ้นมา จริง ๆ ส่วนนี้เป็นส่วนที่เกินจากสโคปซึ่งตอนแรกคิดว่าไม่ทันแต่ก็เขียนออกมาได้ในวันสุดท้ายก่อนจะกลับไทย 😄 จุดนี้บอกได้เลยว่าดีใจมากจนกรี๊ดลั่นห้องเลยครับ</p><h4>🍛 พักเที่ยง</h4><p>ตอนพักเที่ยงจะมีพวกพี่จากแล็ปชวนเราไปทานข้าวด้วยกัน แต่ไม่ใช่เที่ยงตรงเลยครับจะไปสายหน่อยเพราะเที่ยงตรงคนจะค่อนข้างแออัดมาก พอได้เวลาก็มาชวนกันลงไปทานข้าวที่โรงอาหาร</p><p>ส่วนตัวชอบช่วงนี้มาก เพราะมันคือช่วงเวลาที่เราได้แลกเปลี่ยนพูดคุยระหว่างคนที่อยู่บนโต๊ะที่ต่างภาษา ต่างวัฒนธรรม ครับช่วงนี้สนุกดีเหมือนกันได้แลกเปลี่ยนประสบการณ์กันอย่างสนุกสนานมาก จะมีบางคนที่พูดอังกฤษได้ก็จะพูดกับเรา บางคนพูดไม่ได้ก็จะถามคนที่พูดได้เป็นภาษาญี่ปุ่นแล้วก็ให้คนนั้นเป็นล่ามให้เรา 😆</p><p>ราคาอาหารในโรงอาหารจะประมาณ ¥100 — ¥1000 แล้วแต่ว่ามื้อนั้นอยากจะทานจุกแค่ไหน วิธีการก็คือเดินไปชี้ ๆ บอกเขาว่าต้องการอะไรแล้วเขาก็จะเสิร์ฟมาให้จากนั้นเดินไปคิดเงิน บางคนเอาข้าวกล่องมาจากบ้านก็มีครับเป็นกล่องเล็ก ๆ ที่คุณภรรยาทำมาให้ น่ารักมาก 🍱 พอทุกคนได้อาหารเรียบร้อยก็จะไปนั่งรอที่โต๊ะและจะรอทานข้าวพร้อมกัน</p><p>มีคำศัพท์วิเศษคำหนึ่งที่อยากจะแชร์ในวันที่หิวมาก ๆ นั่นคือ โอโมริ(ไม่รู้ภาษาญี่ปุ่นเขียนอย่างไรนะ) มันคือการขอเพิ่มเวลาเขาตักข้าวหรือขอพิเศษทำนองนั้นครับ เราก็จะได้เยอะเป็นพิเศษ และโดนคิดตังค์เพิ่มด้วยเช่นกัน แต่รับประกันได้ว่าอิ่มแน่นอน</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*OpE-fYsMwzgAj85c\" /><figcaption>หลังเสร็จแล้วทุกคนต้องแยกอุปกรณ์ทั้งหมดลงในแต่ละถังครับก่อนจะนำจานไปคืนที่จุดคืนจาน</figcaption></figure><p>พอทานข้าวเสร็จเราก็จะเอาอุปกรณ์ไปคืนครับ การคืนอุปกรณ์จะมีถังแยกแต่ละชนิดอย่างชัดเจนไม่ว่าจะเป็น ตะเกียบ ขยะพลาสติก ขยะกระดาษ หลังจากนั้นก็พากันเดินกลับไปที่ชั้นและทำงานที่เรารักต่อ</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*ClTIzUtCHI1AgZUl\" /><figcaption>ถังขยะในห้องทิ้งขยะ</figcaption></figure><p>มีอีกหนึ่งความประทับใจเรื่องการแยกขยะครับ ในวันแรกของการเข้ามาที่ AIST จะมี Tasaki-san มาบอกว่าห้องน้ำ ที่กดน้ำ ที่ทิ้งขยะอยู่ตรงไหน ถังที่นี่เขาจะแบ่งชัดเจนว่าถังไหนสำหรับใส่อะไรบ้าง เช่น กระป๋อง ขวดแก้ว ขวดพลาสติก ในการทิ้งขวดแต่ละครั้งเราจะต้องทิ้งให้ถูกช่องและแยกฝาขวดทุกครั้ง ส่วนถ่านก็จะมีกระบะแยกต่างหาก ตอนแรกเราก็ยังไม่ทราบครับจนกระทั่ง Tasaki-san มาสอนให้ตั้งแต่วันแรกว่าเราควรจะทิ้งอย่างไร</p><h4>🧘 หลังเลิกงาน</h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*U1visPHWqcQzeIGD\" /></figure><p>ช่วงเวลาที่ลั้ลลาปาจิงโกะที่สุดจะมี 2 ช่วงครับ คือ ช่วงที่ Jason ไม่อยู่ และหลังเลิกงานนี่แหละ ในตอนเย็นของญี่ปุ่นฤดูหนาวท้องฟ้าจะค่อนข้างมืดเร็วมากครับ ปกติแล้วเราก็จะออกจาก AIST ประมาณ 17:30–18:00 แต่เข็มนาฬิกายังชี้ไม่ถึงเลขหกก็มืดมากแล้ว เราก็จะไปเอาจักรยานและกลับเข้าที่พักเพื่อไปวางกระเป๋าในที่พัก</p><p>วันแรกหลังเลิกงานจำได้เลยว่าหาทางปั่นจักรยานไปซุปเปอร์มาร์เก็ตกันครับ เราถามทางจาก Reception และเปิด Google Maps และปั่นกันไป วันแรกจำได้ว่าแผนที่มันพาไปทางที่ไม่ค่อยฉลาดนักแบบมืดมากแล้วถนนก็ไม่ได้ดีเท่าไร ตอนหลังเลยเชื่อทาง Reception และปั่นไปเป็นเส้นตรง ถนนดี๊ดีถึงจุดหมายอย่างรวดเร็วมาก 😐</p><p>มีสถานที่ประจำที่ผมชอบไปหลังเลิกงานครับ</p><ul><li>📍 <a href=\"https://www.google.com/maps/place/Kasumi+Food+Market+-+Umezono/@36.0506692,140.1367945,19.86z/data=!4m12!1m6!3m5!1s0x60220c861812a0d7:0x20caf834271cd1af!2sTonQ!8m2!3d36.0769467!4d140.1107228!3m4!1s0x602273c07d00ad43:0xeef015623acfb0d!8m2!3d36.0506185!4d140.1374898\">カスミ 梅園店 (Kasumi Food Market — Umezono)</a> → เป็นร้านสะดวกซื้อคล้ายที่ขายอาหารสด เนื้อสัตว์ ขนม ข้าวกล่อง ขนมปัง และของใช้ต่าง ๆ ครบถ้วนมากครับ ในช่วงดึกผมจะปั่นออกไปสอยของกินลดราคาเป็นประจำ เช่น ซูชิปลาดิบ เบนโตะ ขนมปัง ดังโงะ ฯลฯ</li><li>📍 <a href=\"https://www.google.com/maps/place/%E5%91%B3%E5%99%8C%E3%81%AE%E3%82%B8%E3%83%A7%E3%83%BC%E3%81%A4%E3%81%8F%E3%81%B0%E6%9C%AC%E5%BA%97/@36.0507837,140.134644,16.96z/data=!4m5!3m4!1s0x0:0x77e404521a2f4cea!8m2!3d36.0507928!4d140.1344214\">味噌のジョーつくば本店</a> → ร้านราเม็งโปรดที่มักจะปั่นจักรยานไปในยามที่อากาศหนาวเหน็บเกือบ 0 องศาคงจะพลาดราเม็งร้อนถ้วยใหญ่ไปได้อย่างไร ไปนั่งทานราเม็งที่มีความหอม เข้มข้น จากนั้นซดน้ำซุป ตามด้วยเส้นที่มีความเหนียวหนึบหนับ เมื่อทานพร้อมกันทุกองค์ประกอบย่อมทำให้เราขึ้นสวรรค์แน่นอน</li><li>🚲 ปั่นจักรยานเล่น → โดยส่วนตัวชอบไปปั่นจักรยานเล่นรอบเมืองที่อยู่ไม่ว่าจะเป็น รอบ AIST หมู่บ้านข้างเรือนเคียง เข้าไปในตัว Tsukuba Center เมืองบ้างอะไรบ้างเรียกว่าช่วงเวลาที่อยู่บนจักรยานนี่แหละมีความสุขที่สุด</li></ul><h3>🎉 Farewell Party</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*1VzeSolxM61KdBbq\" /></figure><p>ก่อนที่เพื่อนฮันกับยอนจะไปเราจะมี Farewell Party ที่ทุกคนจะนำอาหารของตัวเองมาและมารวมกันหลังเลิกงาน</p><p>ภาพที่เห็นผมถือโทรศัพท์คือเป็นรูปของยอนที่ไปชนแก้วกับทุกคนแล้วเมาหนักจนกลับห้องไปนอนผมเลยเปิดรูปในโทรศัพท์เพื่อที่จะให้เห็นรูปแต่อย่างที่เห็นนี่หละครับ เห็นแต่จอขาวแทน 🤣</p><h3>🚴‍♀️ Mount Tsukuba Challenge</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*A2zSs40jERUJmYcs\" /></figure><p>อย่างเคยเล่าว่าช่วงเวลากลางวันที่ได้ไปทานข้าวเป็นเวลาที่สนุกที่สุดอีกช่วงเวลาหนึ่งเพราะเราจะได้แลกเปลี่ยนประสบการณ์กัน ขอคำแนะนำว่าสถานที่ไหนที่น่าไปบ้าง หรือมีร้านข้าวไหนแนะนำไหม</p><p>มีวันหนึ่งเราได้นั่งตรงข้ามกับ Hirofuchi-san ที่เป็นที่ปรึกษาเพื่อนเกาหลีของเรานั่นเอง เขาเล่าว่าเขาเข็นจักรยานขึ้นภูเขาใช้เวลาเกือบสามชั่วโมงนี่แหละ พร้อมกับวันนั้นเป็นวันใกล้วันหยุดสุดสัปดาห์ก่อนกลับ เลยเกิดไอเดียบ้า ๆ บอ ๆ ว่าอะไรที่ยังไม่เคยทำและอยากทำมากก็เหลืออีกอย่างเดียวคือไป Mount Tsukuba จุดนี้เลยเป็นไอเดียที่ถามเขาทันทีเลยว่าสามารถปั่นจักรยานไปได้เหรอ เพราะเราเคยเปิดแผนที่ดูว่าระยะทางจากที่พักของเราไป Mount Tsukuba ก็ไม่ไกลมากไม่กี่กิโลเองน่าจะไปได้สบาย ๆ ไม่มีปัญหาอะไร เพราะตอนนั้นเราปั่นจักรยานทุกวันจนชินไปละ ชินจนชนิดที่ว่าสามารถขี่จักรยานปล่อยมือได้เกือบ 20 นาทีแน่ะ(ฮา)</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*yX2a_H295JE0ASV2\" /></figure><p>วันอาทิตย์ที่ 17 ก็ตื่นขึ้นมาอยู่ดี ๆ อะไรก็เข้าสิงไม่ทราบเหมือนกันครับก็ออกเดินทางเลยครับ กินข้าวที่ทำกับซื้อตุนไว้และเตรียมกระเป๋าละออกเดินทาง วันนี้เป็นวันดีมากที่เจอ Reception ที่เจอกันเป็นประจำและน่ารักมาก เขาบอกว่าให้เราเลือกจักรยานเลยว่าจะเอาคันไหน (เรายังไม่ได้บอกด้วยนะว่าจะปั่นไปภูเขา) ซึ่งแน่นอนว่าเราก็เลือกคันที่เคยปั่นและมั่นใจมากที่สุด ส่วนเส้นทางน่ะเหรอครับก็เปิด Google Maps จิ้มเอาจุดหมายและปั่นไปตามทางที่มันขึ้นมาเลย</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8VhDOT_uXjRJNbaaym5JGA.png\" /><figcaption>[ภาพซ้าย] ดอกไม้สวยงามที่เจอระหว่างทาง, [ภาพกลาง] ทางที่เข็นจักรยานและกระเป๋าขึ้นไป ชันมากกกกก, [ภาพขวา] ในที่สุดก็เห็นป้ายที่บอกว่าใกล้จะถึงสักที TT</figcaption></figure><p>ระหว่างทางที่ปั่นมาบอกได้ว่ามีความสุขมากเพราะถนนดีมากปั่นได้เรื่อย ๆ อากาศก็ยังดีอีกไม่ร้อนมาก ตอนปั่นไปเราก็ได้เห็นในเมืองและนอกเมืองในส่วนที่ไม่เคยได้เห็นมาก่อนได้เจอ ดอกไม้ที่ไม่เคยเห็น ศาลเจ้า ผู้คนในหมู่บ้านที่มาทำกิจกรรมกันในวันอาทิตย์ในหมู่บ้านที่ใกล้ ๆ ภูเขา เขาก็ยิ้มทักทายให้เรา ☺️ เราก็ได้โอกาสถามทางด้วยเลย จนในที่สุดก็ถึงศาลเจ้า <a href=\"https://goo.gl/maps/Dd3tVY1FzeUTF1e66\">筑波山神社 大鳥居 (Mount Tsukuba Shrine Otorii)</a></p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*3RxyJ8ihhMdTJfcD\" /><figcaption>เข็นจักรยานขึ้นมาจนถึง <a href=\"https://goo.gl/maps/Dd3tVY1FzeUTF1e66\">筑波山神社 大鳥居 (Mount Tsukuba Shrine Otorii ⛩)</a></figcaption></figure><p>หลังจากเจอทางเข้าศาลเจ้าแล้วก็เข็นขึ้นไปต่อจนถึงจุดที่ไม่สามารถเข็นขึ้นไปต่อได้ คนส่วนใหญ่เขาจะจอดพวกมอเตอร์ไซค์กับรถยนต์ไว้ข้างล่างและเดินขึ้นไป เราก็เดินไปซื้อเกลือแร่ร้านข้าง ๆ และเจ้าของร้านใจดีมากบอกจอดจักรยานได้เลยและก็พาเราไปจอดข้างร้าน (น่ารักมากกก😊)</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*xDGd3XpyHOQBlY4zWkMsrg.png\" /><figcaption>[ภาพซ้าย] ภาพของตั๋วที่ขึ้นไปครับ ค่าตั๋ว ¥1,050, [ภาพขวา] โชคยังดีที่ไปทันก่อน 17:00 ก่อนรอบสุดท้าย จำได้ว่าไปถึงประมาณ 16:00 กว่า ๆ</figcaption></figure><p>พอเติมพลังเสร็จเรียบร้อยก็เดินขึ้นไปต่อเรื่อย ๆ จนเจอศาลเจ้าและเดินต่อไปจนถึง <a href=\"https://goo.gl/maps/jMicYAEJ33ry2vw47\">筑波山ケーブルカー山麓駅(宮脇駅) (Miyawaki Station (Mt. Tsukuba Cable Car))</a> และขึ้นรถรางไปด้านบนภูเขาต่อ นับว่าโชคดีมากที่ยังมีรอบให้ขึ้นไป แถมมีเวลาให้เดินด้านบนประมาณ 1 ชั่วโมง และลงมาให้ทันรถรางเที่ยวสุดท้าย เวลา ณ ตอนนั้นประมาณ 16:00 ซึ่งจะต้องกลับมาที่สถานีก่อน 17:00</p><p>หลังจากรู้ตัวว่ามีเวลาไม่ถึง 1 ชั่วโมงไปกลับก็รีบวิ่งไปเลยสิครับ ไม่อยากเสียเที่ยว เพราะกว่าจะ ปั่นจักรยาน เข็นจักรยานขึ้นมานั้นมันทรหดมาก มันแค่ต้องขึ้นไปอีกนิดเดียวเท่านั้น เลยใช้พลังเฮือกสุดท้ายไปเพื่อเดินขึ้นไปต่อจนถึงจุดยอดเขาซึ่งมีศาลเจ้าด้วย 😳</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*gRebNdejyiIkjuar\" /><figcaption>ด้านบนสุดของภูเขามีศาลเจ้าด้วย ถ้าเดินต่อไปอีกนิดจะเห็นจุดชมวิวที่มหัศจรรย์มาก</figcaption></figure><p>หลังจากขึ้นไปด้านบนเราก็เดินไปต่อจนสุดทางที่จะไปได้ก็จะเจอจุดชมวิวที่สวยงามชนิดที่ว่าพอเห็นแล้วหายเหนื่อยทันทีครับ ด้วย อากาศ วิวทิวทัศน์ บวกกับความหิมะตกเล็กน้อย เรียกได้ว่าโรแมนติกสุด ๆ สมกับคำร่ำรือว่า “Mount Fuji of the west and Mount Tsukuba of the east”</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*FtpuzxmWJD6O-BhO\" /><figcaption>ภาพ Panorama ที่บนสุดของ Mount Tsukuba ในวันที่ท้องฟ้าไม่ค่อยจะเป็นใจเท่าไร แต่บรรยากาศดีทีเดียว หิมะตกด้วย</figcaption></figure><p>พอขึ้นไปก็ดูวิวสักพักและชื่นชมความทรหดที่ผ่านมาและถ่ายรูปกรุบกริบให้รู้ว่าเราขึ้นมาถึงแล้วนะ</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/960/0*bhfn7_dYjly9NBDA\" /><figcaption>ถ่ายเก็บไว้เป็นที่ระลึกสะหน่อย</figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/1*WfyItycq_WC4HW19e-R0EQ.png\" /><figcaption>[บนซ้าย] วิวขากลับลงมาจากเขาและมาเอาจักรยานเพื่อปั่นกลับที่พัก, [บนขวา] แวะถ่ายวิวระหว่างปั่นจักรยานกลับ, [ล่างซ้าย] แวะถ่ายวิวระหว่างปั่นจักรยานกลับ, [ล่างขวา] แวะกินราเม็งที่ร้าน <a href=\"https://goo.gl/maps/nZoqSdAVycAyFrcFA\">Hariken Ramen</a></figcaption></figure><p>ขากลับก็ต้องปั่นจักรยานลงเขากลับบ้านครับ ขากลับสบายมากเพราะแทบไม่ต้องออกแรงเลยแค่ควบคุมความเร็วให้ได้ก็พอ (แหงล่ะเข็นขึ้นมาตั้งหลายชั่วโมง😌) และแวะพักทานราเม็งร้านที่ Professor Nagata คนหนึ่งที่เจอบนรถบัสขากลับจากโตเกียวแนะนำมา(จริง ๆ Professor คนนี้เป็นแรงบันดาลใจเหมือนกันครับเพราะตอนกลับก็นั่งบนรถแล้วก็คุยกันเกือบชั่วโมง ยังไม่พอขากลับก็เดินกลับทางเดียวกันอีกเลยได้คุยกันแลกเปลี่ยนกันเยอะมากรวมถึงทริปปั่นจักรยานนี้ด้วย)</p><p>วันจันทร์ต่อมาก็ไปเล่าเรื่องที่ปั่นจักรยานให้ Hirofuchi-san ฟังว่าเราไปมาแล้วนะ จังหวะนั้นหน้าเขาประหลาดใจนิดนึงครับ เพราะเขาไม่คิดว่าเราจะไปและเราเป็นคนแรกที่ปั่นไป เขาบอกว่าเคยบอกให้นักเรียนลองปั่นไปแล้ว แต่คุณเป็นคนแรกเลยนะเนี่ยที่ไปตามที่บอกจริง ๆ 😝</p><h3>🤹‍♀️ สิ่งที่ได้จากการไปแลกเปลี่ยน</h3><h4>🇯🇵🇺🇸🇹🇭 ภาษา</h4><p>สิ่งหนึ่งที่เปลี่ยนไปจนทุกคนที่ร่วมโปรเจคสังเกตอย่างเห็นได้ชัดเจนที่สุดคือเรื่อง ภาษา เพราะการแลกเปลี่ยนครั้งนี้จำเป็นจะต้องคุยกับที่ปรึกษาที่ร่วมโปรเจคที่อยู่ที่มหาวิทยาลัยในอีกฟากฝั่งของโลกผ่าน Zoom เพื่ออัพเดทความคืบหน้าเป็นประจำพร้อมทั้งรายงานทั้งหมดจะต้องเป็นภาษาอังกฤษ การที่เราไปอยู่ในสภาพแวดล้อมที่ไม่มีใครพูดภาษาไทยได้จึงเป็นตัวเร่งปฏิกิริยาที่ดีเยี่ยม</p><p>ในตอนแรกสกิลด้านภาษาติดลบมาก กล่าวคือฟังออกแต่เวลาพูดจะต้องคิดคำในหัวสักประเดี๋ยว กว่าจะพูดออกมาได้แต่ประโยคนี่เจ็บปวดหัวใจสะเหลือเกิน จนกระทั่งวันหนึ่งอาจารย์ที่ปรึกษาน่าจะสุดทนที่เห็นเราในตอนนั้นจึงเกิดเหตุการณ์หนึ่งที่อาจารย์จับมาให้ทำรายงานทั้งหมดเป็นภาษาอังกฤษและ Weekly report เป็นภาษาอังกฤษทั้งหมดซึ่งช่วยได้เยอะมากครับ ขอบคุณอาจารย์ที่ช่วยบังคับให้ทำสิ่งเหล่านี้ 💪</p><p>หลังจากที่ได้อยู่ในสภาพแวดล้อมที่ไม่มีใครสามารถพูดภาษาไทยกับเราได้ เราก็จำเป็นต้องฝึกเยอะขึ้นไม่ว่าจะเป็นการดูซีรี่ยส์ 2 season จบภายในคืนเดียว 🤣 หรือฟังพวก Podcast เก็บศัพท์ต่าง ๆ และคุยกับ Jason ก็เป็นสิ่งที่ช่วยได้เป็นอย่างดีเช่นกัน</p><p>จากที่ไม่มั่นใจในการพูดและพูดติดขัดในช่วงแรกเหมือนกับว่ามันค่อยค่อยหายไป กระทั่งมีที่ปรึกษาทักว่าเราพูดภาษาอังกฤษได้คล่องขึ้นมากนะ และทุกคนใน Meeting ก็เห็นพ้องต้องกันว่าจริงด้วย เปลี่ยนไปมากจริง ๆ จนมาสังเกตตัวเองครับว่าจริงด้วย เพราะจากเมื่อก่อนเราต้องแปลงคำพูดในหัวจากภาษาไทยเป็นภาษาอังกฤษ กลายเป็นว่าคิดเป็นภาษาอังกฤษไปเลยมันเลยเร็วและคล่องขึ้นมา</p><p>สกิลภาษาญี่ปุ่นก็ไม่น้อยหน้าเช่นกัน เราก็ได้คำศัพท์พื้นฐานมาก ๆ มาเพื่อการดำรงชีวิตรอด เช่น สวัสดีตอนเช้า บ่าย เย็น ราตรีสวัสดิ์ ขอบคุณ ขอโทษ รวมถึงสิ่งของต่าง ๆ หรือแม้แต่การนับเลข เรียกได้ว่าทำให้สนใจภาษาญี่ปุ่นมากขึ้นมาเยอะในช่วงนั้นเพราะอาจอยู่ในสภาพแวดล้อมที่มีแต่ภาษานั้น ๆ ด้วย แต่ทว่าภาษาที่สื่อสารหลักและต้องเขียนเป็นรายงานและสรุปงานคืออังกฤษทำให้จำคำญี่ปุ่นเพื่อเอาตัวรอดเฉย ๆ (อันนี้เสียดายเหมือนกันถ้ารู้ไปสักนิดคงจะสนุกขึ้นเยอะมาก)</p><p>คนญี่ปุ่นที่ผมเจอส่วนใหญ่ไม่ค่อยพูดภาษาอังกฤษเท่าไร สกิลการเอาตัวรอดส่วนนี้ก็สำคัญเช่นกัน เช่น ไป Super Market หาของไม่เจอ ผมก็จะใช้ Google Translate เป็นภาษาอังกฤษแล้วแปลเป็นญี่ปุ่นออกมาให้ดูว่าเราต้องการสื่อถึงคำนี้นะ ซึ่งพนักงานก็พยักหน้าแล้วส่งเสียงเข้าใจดัง ๆ ออกมาว่า “ฮ่าาา … แล้วก็พึมพำเป็นภาษาญี่ปุ่น” ตรงนี้น่ารักดีนะครับเราจะเข้าใจได้ว่าเขาเข้าใจเราได้อย่างดีแล้วและจะพาเราไปสู่ของสิ่งนั้นอย่างกระตือรือร้น (ฮา)</p><h4>🤔 กระบวนการคิด ทัศนคติ และประสบการณ์ใหม่</h4><p>เนื่องจากจำเป็นจะต้องมีการทำการทดลองวัดค่าประสิทธิภาพต่าง ๆ ของสิ่งที่เราจะต้องทำการทดลองในโปรเจค เพื่อที่ว่าในอนาคตอาจจะได้นำไปตีพิมพ์เป็น paper การทำการทดลองหาค่าประสิทธิภาพ หรือกระบวนการทดลองอย่างเป็นระบบจึงเป็นสิ่งที่สำคัญมาก ผู้ที่เข้ามาช่วยแนะนำในการทำสิ่งเหล่านี้ก็คงหนีไม่พ้น Jason นั่นเอง สิ่งที่ได้เรียนรู้เช่น เก็บข้อมูลการทดลอง การออกแบบการทดลอง การนำข้อมูลมาวิเคราะห์ และตีความต่อด้วยวิธีการทางสถิติที่เคยร่ำเรียนมาในชั้นปีแรกแต่คืนอาจารย์ไปหมดแล้ว</p><p>ในเชิงเทคนิคก็จะมีเช่นกัน เช่น การเรียนภาษา Go เพื่อไปเขียนส่วนต่อขยายและเปิด PR ในโปรเจค Open Source ที่ไม่เคยแตะมาก่อน หรือเขียนพวก Terraform เพื่อใช้ในการสร้างพวก instance ใน Google Cloud เพื่อสร้าง Instance ขึ้นมาใช้ในการทดลอง และสามารถปรับค่าในหลากหลายตัวแปรที่กำหนดไว้ จำได้ว่าตอนนั้นรันเครื่องขึ้นมากว่า 30 เครื่องจนถึงลิมิตที่กำหนดไว้จนต้องติดต่อทาง support เพื่อเพิ่มลิมิตให้ 😆 แน่นอนว่าทั้งหมดบางส่วนก็ต้องเรียนรู้ใหม่ทั้งหมดจากศูนย์</p><p>นอกจากงานแล้วก็ได้คุยกับ Jason ที่เป็นที่ปรึกษาเหมือนกัน เพราะเขาไม่ค่อยจะอยู่ที่แลปเท่าไรนัก บินไป Conference หลายที่ พอเขาอยู่แลปก็เลยคุยชวนคุยชีวิตทั่วไป นักเรียนที่มาที่นี่เป็นอย่างไรบ้างหลังจากจบไป จะเรียนต่อดีไหม จะบอกว่า Jason คุยสนุกมากครับบางทีก็คุยกันเพลินปาไปชั่วโมงกว่าก็มี แต่บทสนทนาค่อนข้างจะได้แนวคิดค่อนข้างเยอะดี ค่อนข้างมีรายละเอียดเยอะและได้เรียนรู้เยอะมากเช่นกัน</p><h4>🤪 ได้รู้จักคนใหม่</h4><p>ได้รู้จักหลายคนครับทั้ง พี่ในแลป เพื่อนร่วมแลป หรืออาจารย์ที่เจอในรถบัสตอนขากลับจาก Tokyo</p><ul><li>Hirofuchi-san พี่ที่ทำงานที่แนะนำทริปปั่นจักรยานขึ้นภูเขา Tsukuba รวมถึงสถานที่อื่น ๆ</li><li>Han และ Yeon เพื่อนชาวเกาหลีที่แนะนำร้านกินอาหารอร่อย พร้อมทั้งปั่นจักรยานไปกินข้าวกัน แถมไปทริปสนุกด้วยกันใน Tokyo ที่ Yeon ไม่ไปด้วยเพราะว่าไปเที่ยวกับแฟนที่บินมาจากเกาหลี 😏</li><li>Slavia, Sima เพื่อนชาวอินเดียที่เจอกันในห้องครัวตอนทำกับข้าวเย็น ๆ ตอนนั้นจะมีแบ่งอาหารกันชิมบ้างอะไรบ้างในครัว มีครั้งหนึ่งเคยทำกาวที่ติดรองเท้าหกบนโต๊ะเลยไปขอพวกน้ำยาล้างเล็บกับ Slavia ซึ่งเขาบอกเขาไม่มีแต่ในแลปมีเดี๋ยวเอามาให้ น่ารักมาก</li></ul><h4>🎎 วัฒนธรรม</h4><p>มีสิ่งหนึ่งที่น่ารักที่ได้เจอจากครอบครัวญี่ปุ่นระหว่างทานร้านซูชิข้างที่พัก เผอิญว่ามีครอบครัวที่มีคุณแม่มาทานข้าวอยู่โต๊ะด้านข้าง ในครอบครัวมีน้องเล็ก ๆ บังเอิญว่ามาทักเราพอดีเราก็ได้สนทนากัน คุณแม่เขาสอนเรื่อง การพูดขอบคุณควรจะก้มหัวอย่างไร พูดอย่างไร</p><p>เรื่องความตรงต่อเวลา อย่างที่ทราบกันดีในช่วงต้นว่าผมเคยเกือบจะพลาดรถเพราะไม่ตรงเวลา เพราะทุกท่านก็ทราบกันดีว่ารถโดยสารสาธารณะที่ไทยกะเวลาได้ค่อนข้างลำบากเมื่อเทียบกับญี่ปุ่นที่ถ้าถึงเวลาหรือก่อนเวลาปุ๊บจะมาถึงป้ายทันที สิ่งนี้คือข้อดีที่ทำให้เราสามารถวางแผนการเดินทางได้อย่างแม่นยำและไม่เสียเวลาครับ</p><p>ถ้าพูดถึงความตรงต่อเวลาอาจจะคิดแค่ว่าก็แค่มาตรงเวลาไม่เห็นจะมีอะไรนิ แต่ท่านลองคิดดูครับว่าถ้าทุกคนในประเทศตรงเวลาไม่ว่าจะเป็น การขนส่งสาธารณะอย่าง รถไฟ รถเมล์ รถส่งของต่าง ๆ หรือแม้แต่การประชุม การเรียนการสอน จะให้เราสามารถวางแผนได้ คาดเดาทุกอย่างได้เพราะทุกคนจะต้องทำอย่างไรก็ได้ให้มาถึงเวลาที่นัดหมายไว้</p><p>เรื่องวัฒนธรรมมีรายละเอียดค่อนข้างเยอะ ๆ เขียนอย่างไรก็คงจะไม่หมด เอาเป็นว่าลองไปสัมผัสกันดูสักครั้งในชีวิต</p><h3>🙏 Special Thanks</h3><ul><li>ดร. ประภาพร รัตนธำรง (อาจารย์นุ่น) ที่คอยเป็นทุกอย่างไม่ว่าจะเป็นอาจารย์ที่ปรึกษาเรื่องโปรเจค เป็นไลฟ์โค้ชในยามที่ท้อแท้ หมดหวัง หมดกำลังใจ และท่านได้เป็น ผู้นำทางจิตวิญญาณ ให้พวกเราจนจบโปรเจคได้ และแน่นอนว่าการได้มาแลกเปลี่ยนครั้งนี้ด้วย 😊</li><li>Jason ไม่ต้องพูดถึง เป็น Advisor ที่ดีมากไม่ว่าจะเป็นทางด้านงาน ที่กิน สถานที่ที่พลาดไม่ได้และการให้คำปรึกษาเรื่องชีวิต เรียนต่อ เป็นต้น รวมถึง Shava, Nadya รวมถึงผู้ที่เกี่ยวข้องด้วยทั้งหมด</li><li>เพื่อนร่วมโปรเจคอย่างเคนที่ทำให้ทุกอย่างเสร็จทันและผ่านไปได้ด้วยดี</li><li>Tasaki-san ที่คอยเป็นไกด์ให้เราในตั้งแต่ก่อนบินมาที่ญี่ปุ่นรวมไปถึงการอยู่ที่นี่ ทั้งแนะนำสถานที่กินอร่อย ๆ สถานที่เที่ยวตามฤดูกาลที่ไม่ควรพลาด พร้อมวัฒนธรรมของคนญี่ปุ่นซึ่งบางทีเราอาจจะไม่รู้มาก่อน คำศัพท์ภาษาญี่ปุ่นพื้นฐานทั้งหลาย</li><li>พี่ ๆ ในในภาคที่ช่วยทำเอกสารเรื่องการสอบรวมถึงเอกสารจำเป็นต่าง ๆ ที่ถ้าพวกพี่เขาช่วยเตรียมเอกสารให้ก็คิดไม่ออกเช่นกันว่าจะได้ไปไหม</li><li>รวมไปถึงผู้สนับสนุนที่อาจจะไม่ได้กล่าวถึงรวมถึงแต่อยู่เบื้องหลังที่ทำให้การมาครั้งนี้เป็นจริงได้ไม่ว่าจะเป็น พ่อ แม่ พี่น้อง และญาติทุก ๆ คนครับ</li></ul><h3>อยากฝากอะไรไหมสำหรับคนที่จะไป?</h3><p>ทำตัวให้เบาที่สุด ให้ไม่เหลืออะไรที่เราจะต้องกังวลในช่วงเวลาที่เราใช้ชีวิตอยู่ที่ต่างเมืองและทำให้เต็มที่โดยที่ไม่ต้องเหลืออะไรให้เสียใจในภายหลัง</p><p>เขียนด้วย ❤️ โดย Ayuth Mangmesap</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=521a31447f5e\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/ayuth/%E0%B8%99%E0%B8%B2%E0%B8%A2%E0%B8%AD%E0%B8%B2%E0%B8%A2%E0%B8%B8%E0%B8%95%E0%B8%A1%E0%B9%8C-%E0%B8%A1%E0%B8%B1%E0%B9%88%E0%B8%87%E0%B8%A1%E0%B8%B5%E0%B8%97%E0%B8%A3%E0%B8%B1%E0%B8%9E%E0%B8%A2%E0%B9%8C-%E0%B8%99%E0%B8%B1%E0%B8%81%E0%B8%A8%E0%B8%B6%E0%B8%81%E0%B8%A9%E0%B8%B2%E0%B9%81%E0%B8%A5%E0%B8%81%E0%B9%80%E0%B8%9B%E0%B8%A5%E0%B8%B5%E0%B9%88%E0%B8%A2%E0%B8%99-outbound-%E0%B8%97%E0%B8%B5%E0%B9%88-national-institute-of-advanced-industrial-521a31447f5e\">ประสบการณ์แลกเปลี่ยนที่ National Institute of Advanced Industrial Science and Technology (AIST)…</a> was originally published in <a href=\"https://medium.com/ayuth\">Ayuth’s Story</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "date_published": "2022-05-16T06:09:04.000Z",
      "author": {
        "name": "Ayuth Mangmesap"
      }
    }
  ]
}
